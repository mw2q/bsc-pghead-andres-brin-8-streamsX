Q21,715330.0,->  Nested Loop Semi Join  (cost=2406.31..2845258.76 rows=1 width=34) (actual time=40.301..40142.169 rows=715330 loops=1)
Q18,400301.4,->  GroupAggregate  (cost=10155039.93..10980661.76 rows=30022612 width=39) (actual time=70481.841..70482.095 rows=75 loops=1)
Q3,315229.1,->  Sort  (cost=2534236.72..2542117.45 rows=3152291 width=20) (actual time=44737.992..44737.994 rows=10 loops=1)
Q18,100099.8,->  Hash Join  (cost=2180097.47..2793807.34 rows=7507492 width=39) (actual time=45511.561..51968.007 rows=75 loops=1)
Q18,100099.8,->  Hash Join  (cost=2111069.47..2612166.96 rows=7507492 width=20) (actual time=44394.671..50850.879 rows=75 loops=1)
Q18,100099.8,->  Hash  (cost=2793807.34..2793807.34 rows=7507492 width=39) (actual time=51968.305..51968.305 rows=75 loops=1)
Q18,57185.9,->  Sort  (cost=10155039.93..10230096.46 rows=30022612 width=39) (actual time=70481.826..70481.851 rows=525 loops=1)
Q18,57185.9,->  Hash Join  (cost=2887650.99..5605367.65 rows=30022612 width=39) (actual time=52387.623..70480.786 rows=525 loops=1)
Q18,54825.9,->  Hash  (cost=2059670.15..2059670.15 rows=4111946 width=4) (actual time=44229.781..44229.781 rows=75 loops=1)
Q18,54825.9,->  HashAggregate  (cost=1967151.36..2018550.69 rows=4111946 width=8) (actual time=38434.870..44229.378 rows=75 loops=1)
Q21,40156.0,->  Nested Loop Anti Join  (cost=2406.88..2845260.54 rows=1 width=26) (actual time=40.785..43066.107 rows=40156 loops=1)
Q10,28315.1,->  Sort  (cost=2273788.78..2275204.54 rows=566303 width=175) (actual time=31470.261..31470.263 rows=20 loops=1)
Q9,25923.5,->  Sort  (cost=1138314.30..1138314.61 rows=125 width=46) (actual time=86982.237..87490.272 rows=3240447 loops=1)
Q9,25923.5,->  Nested Loop  (cost=66824.72..1138306.04 rows=125 width=24) (actual time=577.381..78053.098 rows=3240447 loops=1)
Q9,25923.5,->  Nested Loop  (cost=66824.28..1138245.46 rows=125 width=24) (actual time=577.295..47881.300 rows=3240447 loops=1)
Q9,25923.5,->  Nested Loop  (cost=66823.99..1138205.13 rows=125 width=28) (actual time=577.286..37780.252 rows=3240447 loops=1)
Q9,25923.5,->  Hash Join  (cost=66826.28..1138309.94 rows=125 width=46) (actual time=577.435..81328.335 rows=3240447 loops=1)
Q2,4699.0,->  Merge Join  (cost=465633.87..890673.02 rows=1 width=190) (actual time=5973.045..7880.072 rows=4699 loops=1)
Q21,4049.0,->  HashAggregate  (cost=2845260.54..2845260.55 rows=1 width=26) (actual time=43128.483..43129.580 rows=4049 loops=1)
Q15,3765.0,->  Subquery Scan on revenue0  (cost=2006773.74..2006858.45 rows=3765 width=12) (actual time=40427.182..40427.496 rows=1 loops=1)
Q15,3765.0,->  Sort  (cost=2007082.06..2007091.48 rows=3765 width=12) (actual time=40427.521..40427.521 rows=1 loops=1)
Q15,3765.0,Merge Join  (cost=3996959.80..4002057.48 rows=3765 width=79) (actual time=40441.909..40441.911 rows=1 loops=1)
Q15,3765.0,->  HashAggregate  (cost=2006773.74..2006820.80 rows=3765 width=12) (actual time=40427.182..40427.496 rows=1 loops=1)
Q7,765.0,Sort  (cost=2114723.62..2114731.27 rows=3060 width=64) (actual time=24397.385..24397.386 rows=4 loops=1)
Q7,765.0,->  HashAggregate  (cost=2114500.55..2114546.45 rows=3060 width=64) (actual time=24397.315..24397.323 rows=4 loops=1)
Q8,366.5,Sort  (cost=1761421.35..1761423.18 rows=733 width=38) (actual time=10376.701..10376.701 rows=2 loops=1)
Q8,366.5,->  HashAggregate  (cost=1761373.64..1761386.47 rows=733 width=38) (actual time=10376.666..10376.668 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2845260.56..2845260.57 rows=1 width=26) (actual time=43130.721..43130.726 rows=100 loops=1)
Q21,100.0,Limit  (cost=2845260.56..2845260.57 rows=1 width=26) (actual time=43130.726..43130.745 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=890673.03..890673.04 rows=1 width=190) (actual time=7884.874..7884.885 rows=100 loops=1)
Q2,100.0,Limit  (cost=890673.03..890673.04 rows=1 width=190) (actual time=7884.876..7884.901 rows=100 loops=1)
Q11,38.0,Sort  (cost=614372.93..615172.70 rows=319910 width=12) (actual time=7321.399..7322.272 rows=8406 loops=1)
Q11,38.0,->  HashAggregate  (cost=292160.84..296159.71 rows=319910 width=12) (actual time=7245.722..7316.479 rows=8406 loops=1)
Q3,27.7,->  HashAggregate  (cost=2434593.94..2466116.85 rows=3152291 width=20) (actual time=44680.031..44716.945 rows=113562 loops=1)
Q15,26.5,->  HashAggregate  (cost=1989792.72..1989830.37 rows=3765 width=12) (actual time=19661.607..19687.490 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.006..0.006 rows=1 loops=742332)
Q14,13.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7786.91 rows=763891 width=0) (actual time=120.293..120.293 rows=10664960 loops=1)
Q3,10.5,->  Hash Join  (cost=762211.52..2387309.57 rows=3152291 width=20) (actual time=7740.045..44372.981 rows=299385 loops=1)
Q16,10.2,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2387.71 rows=316760 width=0) (actual time=34.559..34.559 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.014..0.074 rows=8 loops=431508)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.629..3.629 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.651..3.651 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.238..0.238 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.260..0.260 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.261..0.261 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.265..0.265 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.247..0.247 rows=23040 loops=1)
Q5,5.0,Sort  (cost=1996556.09..1996556.16 rows=25 width=34) (actual time=15618.670..15618.670 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1996555.26..1996555.51 rows=25 width=34) (actual time=15618.627..15618.629 rows=5 loops=1)
Q4,5.0,Sort  (cost=1488062.54..1488062.55 rows=1 width=16) (actual time=14722.299..14722.299 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.07 rows=5 width=4) (actual time=0.016..0.016 rows=1 loops=573807)
Q4,5.0,->  HashAggregate  (cost=1488062.52..1488062.53 rows=1 width=16) (actual time=14722.250..14722.251 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=715330)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5787.12 rows=574712 width=0) (actual time=27.352..27.352 rows=2535680 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5762.25 rows=572225 width=0) (actual time=27.592..27.592 rows=2535680 loops=1)
Q13,4.3,Sort  (cost=845647.38..845647.88 rows=200 width=8) (actual time=25683.170..25683.173 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=845637.74..845639.74 rows=200 width=8) (actual time=25683.075..25683.082 rows=46 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.011..0.012 rows=1 loops=1205980)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.03 rows=15 width=16) (actual time=0.013..0.015 rows=4 loops=457500)
Q17,3.7,->  Nested Loop  (cost=82.82..114691.07 rows=20135 width=4) (actual time=1.705..183.234 rows=5385 loops=1)
Q4,3.3,->  Nested Loop Semi Join  (cost=5931.37..1487275.58 rows=157388 width=16) (actual time=27.536..14410.925 rows=526163 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.59 rows=10 width=12) (actual time=0.011..0.024 rows=3 loops=2023)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..243425.92 rows=32437055 width=0) (actual time=120.500..120.500 rows=10664960 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.30 rows=1 width=8) (actual time=0.291..0.362 rows=3 loops=21770)
Q15,3.0,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.021..11.130 rows=32993 loops=1)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..54573.04 rows=7271072 width=0) (actual time=27.465..27.465 rows=2535680 loops=1)
Q22,2.3,Sort  (cost=691296.69..691296.70 rows=3 width=20) (actual time=8507.832..8507.832 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=638318.18..638318.23 rows=3 width=20) (actual time=8507.778..8507.780 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.033..0.050 rows=2 loops=6351)
Q20,2.0,->  Nested Loop  (cost=754.50..11668699.04 rows=29387 width=4) (actual time=13.004..8509.242 rows=59181 loops=1)
Q20,2.0,->  Hash  (cost=11668699.04..11668699.04 rows=29387 width=4) (actual time=8547.296..8547.296 rows=59181 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2016.33 rows=200433 width=0) (actual time=4.438..4.438 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=402742.53..404211.79 rows=587704 width=40) (actual time=10116.442..10263.535 rows=1183739 loops=1)
Q16,2.0,->  Hash Join  (cost=54591.55..346426.59 rows=587704 width=40) (actual time=1485.076..6873.706 rows=1183739 loops=1)
Q12,2.0,Sort  (cost=3022894.96..3022894.97 rows=1 width=27) (actual time=34608.515..34608.515 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3022894.95..3022894.96 rows=1 width=27) (actual time=34608.465..34608.465 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=344193.05..2238899.06 rows=566303 width=175) (actual time=6424.823..29215.884 rows=1149301 loops=1)
Q10,2.0,->  Hash Join  (cost=344191.49..2231110.83 rows=566303 width=153) (actual time=6424.796..28800.769 rows=1149301 loops=1)
Q10,2.0,->  Hash Join  (cost=275163.49..2153588.29 rows=566303 width=12) (actual time=5078.860..26674.222 rows=1149301 loops=1)
Q21,1.9,->  Nested Loop  (cost=2405.75..2323945.68 rows=390185 width=38) (actual time=40.282..34841.357 rows=742332 loops=1)
Q21,1.9,->  Hash Join  (cost=2405.31..1902506.18 rows=800603 width=34) (actual time=40.242..26874.372 rows=1535857 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.908..3818.445 rows=7995520 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1817038.30 rows=20015075 width=8) (actual time=0.005..20899.657 rows=37967116 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.060..0.827 rows=56 loops=1)
Q1,1.5,Sort  (cost=4203334.56..4203334.58 rows=6 width=20) (actual time=92358.483..92358.483 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4203334.38..4203334.48 rows=6 width=20) (actual time=92358.391..92358.393 rows=4 loops=1)
Q9,1.4,GroupAggregate  (cost=1138314.30..1138318.67 rows=125 width=46) (actual time=86992.374..89629.143 rows=175 loops=1)
Q20,1.4,Sort  (cost=11671509.59..11671512.53 rows=1175 width=51) (actual time=8578.969..8579.069 rows=1754 loops=1)
Q20,1.4,->  Hash Semi Join  (cost=11669109.38..11671449.67 rows=1175 width=51) (actual time=8547.779..8578.190 rows=1754 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5990.73 rows=597873 width=0) (actual time=4.189..4.189 rows=405760 loops=1)
Q10,1.4,->  HashAggregate  (cost=2253056.63..2258719.66 rows=566303 width=175) (actual time=31140.465..31332.174 rows=382260 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2909.09 rows=140607 width=0) (actual time=410.624..410.624 rows=190924 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2944.25..41913.18 rows=140607 width=24) (actual time=418.703..516.623 rows=190924 loops=1)
Q18,1.3,Limit  (cost=10155039.93..10155042.68 rows=100 width=39) (actual time=70481.845..70482.108 rows=75 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91594.11 rows=9144611 width=0) (actual time=118.290..118.290 rows=10664960 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=104114 width=4) (actual time=0.009..546.164 rows=107877 loops=1)
Q9,1.0,->  Hash Join  (cost=66823.43..351945.98 rows=416456 width=16) (actual time=577.116..4586.162 rows=431508 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=104114 width=4) (actual time=576.776..576.776 rows=107877 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.680..1845.536 rows=299493 loops=1)
Q8,1.0,->  Nested Loop  (cost=423.14..1713317.11 rows=124625 width=20) (actual time=7.213..8116.759 rows=119877 loops=1)
Q8,1.0,->  Nested Loop  (cost=422.70..1512807.98 rows=409508 width=16) (actual time=7.144..3734.453 rows=394051 loops=1)
Q8,1.0,->  Nested Loop  (cost=38753.58..1760406.24 rows=24925 width=16) (actual time=1947.714..10299.736 rows=23899 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..108.51 rows=31 width=20) (actual time=0.026..0.254 rows=30 loops=13153)
Q8,1.0,->  Hash Join  (cost=38755.14..1760875.14 rows=24925 width=38) (actual time=1947.768..10337.350 rows=23899 loops=1)
Q8,1.0,->  Hash Join  (cost=38753.29..1752363.85 rows=24925 width=16) (actual time=1947.643..10125.520 rows=23899 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=1938.286..1938.286 rows=299493 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..418.73 rows=13640 width=0) (actual time=4.863..4.863 rows=13153 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=422.14..28494.08 rows=13640 width=4) (actual time=7.095..272.785 rows=13153 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.665..359.949 rows=59899 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=8) (actual time=0.007..3320.559 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2101770.17 rows=1454955 width=42) (actual time=645.879..23705.370 rows=1466912 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2113592.32 rows=60549 width=64) (actual time=686.398..24307.166 rows=58537 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..530594.42 rows=1201199 width=30) (actual time=645.775..8791.816 rows=1205980 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.038..606.565 rows=120312 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.043..37.934 rows=7952 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=645.282..645.282 rows=120312 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=39.983..39.983 rows=7952 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91784.76..1364011.51 rows=762625 width=8) (actual time=119.074..29707.382 rows=761545 loops=1)
Q5,1.0,->  Seq Scan on orders  (cost=0.00..478746.76 rows=2273971 width=8) (actual time=0.013..4357.931 rows=2278245 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.792..1998.023 rows=300963 loops=1)
Q5,1.0,->  Nested Loop  (cost=38342.20..1976780.80 rows=1818731 width=46) (actual time=2112.150..14799.842 rows=1830965 loops=1)
Q5,1.0,->  Hash Join  (cost=43021.20..1995827.77 rows=72749 width=34) (actual time=2166.807..15533.174 rows=73323 loops=1)
Q5,1.0,->  Hash Join  (cost=38341.63..530163.72 rows=454794 width=38) (actual time=2112.071..7385.704 rows=457500 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2110.008..2110.008 rows=300963 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.689..389.886 rows=60193 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5930.80..268073.48 rows=574712 width=20) (actual time=27.521..4761.858 rows=573807 loops=1)
Q3,1.0,->  Hash Join  (cost=106167.80..492436.55 rows=1459183 width=12) (actual time=424.902..7128.701 rows=1453751 loops=1)
Q3,1.0,->  Hash  (cost=492436.55..492436.55 rows=1459183 width=12) (actual time=7611.714..7611.714 rows=1453751 loops=1)
Q3,1.0,->  Hash  (cost=46014.18..46014.18 rows=301025 width=4) (actual time=395.228..395.228 rows=299496 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6898.11 rows=301025 width=0) (actual time=65.464..65.464 rows=299496 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=56390.81..400801.21 rows=7271072 width=16) (actual time=27.645..4533.892 rows=7265540 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=251535.18..1723471.37 rows=32437055 width=12) (actual time=121.261..31199.347 rows=32491428 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6973.37..46014.18 rows=301025 width=4) (actual time=73.470..320.291 rows=299496 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=4) (actual time=0.018..3751.902 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=403671.84..403671.84 rows=15014984 width=4) (actual time=7822.080..7822.080 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=594303.39..637872.94 rows=59366 width=20) (actual time=8288.776..8486.482 rows=63475 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6585.54 rows=383272 width=0) (actual time=71.803..71.803 rows=382540 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6681.35..52020.24 rows=383272 width=4) (actual time=79.568..288.702 rows=382540 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.291..38.999 rows=4049 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=40.171..40.171 rows=4049 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.279..38.318 rows=4049 loops=1)
Q2,1.0,->  Sort  (cost=465633.45..469632.33 rows=1599552 width=168) (actual time=5971.661..6094.633 rows=1604072 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.340..176.530 rows=20051 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8051 width=30) (actual time=0.926..1143.459 rows=8011 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300805.72 rows=1599552 width=168) (actual time=188.078..4934.416 rows=1604080 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=187.955..187.955 rows=20051 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.258..34.366 rows=4010 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.295..29.549 rows=3981 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.56 rows=20001 width=0) (actual time=8.804..8.804 rows=21770 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.279..28.948 rows=3981 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.07..34891.54 rows=22021 width=4) (actual time=12.418..597.867 rows=21770 loops=1)
Q19,1.0,->  Nested Loop  (cost=12894.14..617386.83 rows=1144 width=8) (actual time=32.916..2637.072 rows=1150 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4003.20 rows=399120 width=0) (actual time=4.597..4.597 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.47 rows=8076 width=0) (actual time=3.887..3.887 rows=8048 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.27 rows=8058 width=0) (actual time=3.887..3.887 rows=8071 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.91 rows=8022 width=0) (actual time=3.543..3.543 rows=7979 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.74 rows=31 width=0) (actual time=0.027..0.027 rows=30 loops=4894)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12889.40..26712.67 rows=4814 width=30) (actual time=32.736..296.331 rows=4894 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=16) (actual time=0.006..3596.481 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1666925.24 rows=60045224 width=8) (actual time=0.004..7716.627 rows=60045669 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1666925.24 rows=60045224 width=8) (actual time=0.006..7642.080 rows=60045669 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.022..0.034 rows=30 loops=2023)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.022..0.034 rows=30 loops=2023)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.55 rows=2012 width=0) (actual time=1.020..1.020 rows=2023 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=73.05..6662.09 rows=2012 width=4) (actual time=1.368..49.526 rows=2023 loops=1)
Q16,1.0,Sort  (cost=412396.02..412464.89 rows=27549 width=40) (actual time=10913.733..10915.617 rows=27839 loops=1)
Q16,1.0,->  Hash  (cost=50902.17..50902.17 rows=293852 width=40) (actual time=1482.187..1482.187 rows=296110 loops=1)
Q16,1.0,->  GroupAggregate  (cost=402742.53..410364.32 rows=27549 width=40) (actual time=10116.513..10854.865 rows=27839 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2461.17..50902.17 rows=293852 width=40) (actual time=34.662..1348.705 rows=296110 loops=1)
Q15,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1967151.36 rows=2264136 width=12) (actual time=0.010..17658.672 rows=2248034 loops=1)
Q15,1.0,->  Seq Scan on lineitem  (cost=0.00..1967151.36 rows=2264136 width=12) (actual time=0.021..18676.032 rows=2248034 loops=1)
Q14,1.0,->  Hash Join  (cost=93499.88..1140836.28 rows=763891 width=29) (actual time=1563.820..42283.856 rows=749626 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=7977.88..1043855.91 rows=763891 width=12) (actual time=121.179..39767.136 rows=749626 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..441209.30 rows=14895022 width=8) (actual time=0.018..7123.359 rows=14853047 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..733662.63 rows=14895022 width=8) (actual time=796.781..16680.250 rows=15353065 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=20) (actual time=0.006..4704.794 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2417490.54 rows=288108 width=15) (actual time=0.087..24413.180 rows=312893 loops=1)
Q12,1.0,->  Hash Join  (cost=591359.14..3017853.06 rows=288108 width=27) (actual time=9469.530..34282.398 rows=312893 loops=1)
Q12,1.0,->  Hash  (cost=403671.84..403671.84 rows=15014984 width=20) (actual time=9424.488..9424.488 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.301..47.044 rows=4095 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.300..26.928 rows=4095 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286562.41 rows=319910 width=8) (actual time=27.860..2746.363 rows=327600 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286562.41 rows=319910 width=12) (actual time=48.420..4148.689 rows=327600 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=48.375..48.375 rows=4095 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=27.800..27.800 rows=4095 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.267..26.291 rows=4095 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.284..46.109 rows=4095 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1817038.30 rows=59657402 width=20) (actual time=0.016..20725.039 rows=59655365 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1817038.30 rows=14859591 width=12) (actual time=0.011..18431.092 rows=14822992 loops=1)
Q10,1.0,->  Hash  (cost=268010.68..268010.68 rows=572225 width=8) (actual time=5075.201..5075.201 rows=573915 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5905.30..268010.68 rows=572225 width=8) (actual time=27.764..4886.646 rows=573915 loops=1)
