Q21,694229.0,->  Nested Loop Semi Join  (cost=2406.31..2845258.76 rows=1 width=34) (actual time=59.138..33654.654 rows=694229 loops=1)
Q3,313983.8,->  Sort  (cost=2528531.74..2536381.33 rows=3139838 width=20) (actual time=37314.335..37314.336 rows=10 loops=1)
Q18,300826.3,->  GroupAggregate  (cost=10175264.59..11002536.92 rows=30082630 width=39) (actual time=66071.678..66072.017 rows=100 loops=1)
Q18,67770.0,->  Hash Join  (cost=2184030.02..2798882.72 rows=7522476 width=39) (actual time=42579.276..48237.708 rows=111 loops=1)
Q18,67770.0,->  Hash Join  (cost=2115002.02..2617017.58 rows=7522476 width=20) (actual time=41729.602..47387.750 rows=111 loops=1)
Q18,67770.0,->  Hash  (cost=2798882.72..2798882.72 rows=7522476 width=39) (actual time=48237.994..48237.994 rows=111 loops=1)
Q18,42913.8,->  Sort  (cost=10175264.59..10250471.17 rows=30082630 width=39) (actual time=66071.668..66071.710 rows=701 loops=1)
Q21,39113.0,->  Nested Loop Anti Join  (cost=2406.88..2845260.54 rows=1 width=26) (actual time=59.223..36394.606 rows=39113 loops=1)
Q18,38716.3,->  Hash Join  (cost=2892913.67..5616063.34 rows=30082630 width=39) (actual time=48557.901..66070.649 rows=777 loops=1)
Q18,37044.5,->  Hash  (cost=2063602.70..2063602.70 rows=4111946 width=4) (actual time=41613.050..41613.050 rows=111 loops=1)
Q18,37044.5,->  HashAggregate  (cost=1971083.92..2022483.24 rows=4111946 width=8) (actual time=37081.114..41612.695 rows=111 loops=1)
Q10,27548.1,->  Sort  (cost=2288616.70..2289994.10 rows=550962 width=175) (actual time=30887.513..30887.517 rows=20 loops=1)
Q9,26853.3,->  Sort  (cost=1109663.74..1109664.04 rows=121 width=46) (actual time=91188.842..91676.435 rows=3249250 loops=1)
Q9,26853.3,->  Nested Loop  (cost=66774.83..1109655.72 rows=121 width=24) (actual time=834.819..82611.142 rows=3249250 loops=1)
Q9,26853.3,->  Nested Loop  (cost=66774.40..1109597.08 rows=121 width=24) (actual time=834.757..50561.781 rows=3249250 loops=1)
Q9,26853.3,->  Nested Loop  (cost=66774.10..1109558.03 rows=121 width=28) (actual time=834.746..40650.640 rows=3249250 loops=1)
Q9,26853.3,->  Hash Join  (cost=66776.39..1109659.55 rows=121 width=46) (actual time=834.874..85831.475 rows=3249250 loops=1)
Q2,4640.0,->  Merge Join  (cost=465633.87..884859.44 rows=1 width=190) (actual time=6234.204..8129.917 rows=4640 loops=1)
Q21,3934.0,->  HashAggregate  (cost=2845260.54..2845260.55 rows=1 width=26) (actual time=36445.619..36446.904 rows=3934 loops=1)
Q15,3768.0,->  Subquery Scan on revenue1  (cost=1474773.77..1474858.55 rows=3768 width=12) (actual time=48219.575..48233.482 rows=1 loops=1)
Q15,3768.0,->  Sort  (cost=1475082.36..1475091.78 rows=3768 width=12) (actual time=48233.500..48233.500 rows=1 loops=1)
Q15,3768.0,Merge Join  (cost=2932843.17..2937940.89 rows=3768 width=79) (actual time=48235.529..48235.530 rows=1 loops=1)
Q15,3768.0,->  HashAggregate  (cost=1474773.77..1474820.87 rows=3768 width=12) (actual time=48219.575..48233.481 rows=1 loops=1)
Q7,765.0,Sort  (cost=2123090.96..2123098.61 rows=3060 width=64) (actual time=23400.438..23400.439 rows=4 loops=1)
Q7,765.0,->  HashAggregate  (cost=2122867.90..2122913.80 rows=3060 width=64) (actual time=23400.376..23400.381 rows=4 loops=1)
Q8,366.5,Sort  (cost=1744917.51..1744919.35 rows=733 width=38) (actual time=11205.833..11205.833 rows=2 loops=1)
Q8,366.5,->  HashAggregate  (cost=1744869.80..1744882.63 rows=733 width=38) (actual time=11205.794..11205.795 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2845260.56..2845260.57 rows=1 width=26) (actual time=36448.058..36448.065 rows=100 loops=1)
Q21,100.0,Limit  (cost=2845260.56..2845260.57 rows=1 width=26) (actual time=36448.059..36448.076 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=884859.45..884859.46 rows=1 width=190) (actual time=8134.520..8134.533 rows=100 loops=1)
Q2,100.0,Limit  (cost=884859.45..884859.46 rows=1 width=190) (actual time=8134.522..8134.546 rows=100 loops=1)
Q11,34.2,Sort  (cost=614372.93..615172.70 rows=319910 width=12) (actual time=8238.310..8239.394 rows=9348 loops=1)
Q11,34.2,->  HashAggregate  (cost=292160.84..296159.71 rows=319910 width=12) (actual time=8157.179..8233.065 rows=9348 loops=1)
Q3,27.6,->  HashAggregate  (cost=2429282.59..2460680.97 rows=3139838 width=20) (actual time=37249.793..37293.239 rows=113553 loops=1)
Q15,26.5,->  HashAggregate  (cost=1457675.73..1457713.41 rows=3768 width=12) (actual time=23544.992..23583.542 rows=100000 loops=1)
Q15,19.9,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.025..1.523 rows=5001 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.005..0.005 rows=1 loops=720499)
Q14,13.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7847.79 rows=769979 width=0) (actual time=119.492..119.492 rows=10750720 loops=1)
Q3,10.4,->  Hash Join  (cost=762462.71..2382185.02 rows=3139838 width=20) (actual time=7525.911..36958.588 rows=300615 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2414.51 rows=320333 width=0) (actual time=35.001..35.001 rows=3246080 loops=1)
Q9,7.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.015..0.080 rows=7 loops=433608)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.606..3.606 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.611..3.611 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.238..0.238 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.306..0.306 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.266..0.266 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.274..0.274 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.251..0.251 rows=23040 loops=1)
Q5,5.0,Sort  (cost=2003489.41..2003489.47 rows=25 width=34) (actual time=14731.578..14731.578 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=2003488.58..2003488.83 rows=25 width=34) (actual time=14731.533..14731.534 rows=5 loops=1)
Q4,5.0,Sort  (cost=1479746.84..1479746.84 rows=1 width=16) (actual time=12844.379..12844.380 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.23 rows=5 width=4) (actual time=0.011..0.011 rows=1 loops=555018)
Q4,5.0,->  HashAggregate  (cost=1479746.82..1479746.83 rows=1 width=16) (actual time=12844.327..12844.329 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.003..0.003 rows=1 loops=694229)
Q4,4.5,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5657.51 rows=561751 width=0) (actual time=27.698..27.698 rows=2556160 loops=1)
Q10,4.5,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5607.35 rows=556735 width=0) (actual time=27.528..27.528 rows=2556160 loops=1)
Q13,4.3,Sort  (cost=851553.93..851554.43 rows=200 width=8) (actual time=26248.234..26248.237 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=851544.29..851546.29 rows=200 width=8) (actual time=26248.166..26248.172 rows=46 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.010..0.011 rows=1 loops=1197163)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.03 rows=15 width=16) (actual time=0.011..0.012 rows=4 loops=454222)
Q17,3.7,->  Nested Loop  (cost=82.47..112787.71 rows=19894 width=4) (actual time=2.327..192.279 rows=5267 loops=1)
Q4,3.3,->  Nested Loop Semi Join  (cost=5798.51..1478983.72 rows=152619 width=16) (actual time=27.922..12554.831 rows=508954 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.013..0.031 rows=3 loops=1967)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..240508.43 rows=32048057 width=0) (actual time=119.502..119.502 rows=10676480 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.30 rows=1 width=8) (actual time=0.342..0.413 rows=3 loops=21632)
Q3,2.9,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..55451.88 rows=7388251 width=0) (actual time=27.208..27.208 rows=2538240 loops=1)
Q22,2.3,Sort  (cost=695813.72..695813.72 rows=3 width=20) (actual time=8745.593..8745.593 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=642949.91..642949.96 rows=3 width=20) (actual time=8745.551..8745.551 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.036..0.051 rows=2 loops=6278)
Q20,2.0,->  Nested Loop  (cost=754.48..11668697.83 rows=29387 width=4) (actual time=13.243..9533.103 rows=58976 loops=1)
Q20,2.0,->  Hash  (cost=11668697.83..11668697.83 rows=29387 width=4) (actual time=9568.316..9568.316 rows=58976 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2016.33 rows=200433 width=0) (actual time=4.184..4.184 rows=405760 loops=1)
Q12,2.0,Sort  (cost=3037964.16..3037964.17 rows=1 width=27) (actual time=33142.899..33142.900 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3037964.14..3037964.15 rows=1 width=27) (actual time=33142.850..33142.851 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=345634.31..2254672.13 rows=550962 width=175) (actual time=6734.266..28602.037 rows=1121333 loops=1)
Q10,2.0,->  Hash Join  (cost=345632.75..2247094.84 rows=550962 width=153) (actual time=6734.212..28193.572 rows=1121333 loops=1)
Q10,2.0,->  Hash Join  (cost=276604.75..2169802.41 rows=550962 width=12) (actual time=5352.754..26112.237 rows=1121333 loops=1)
Q16,1.9,->  Sort  (cost=403658.51..405144.51 rows=594400 width=40) (actual time=9181.868..9323.031 rows=1185288 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.571..2914.959 rows=7995520 loops=1)
Q16,1.9,->  Hash Join  (cost=54750.36..346652.36 rows=594400 width=40) (actual time=1314.060..5718.232 rows=1185288 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1817038.30 rows=20015075 width=8) (actual time=0.005..16603.353 rows=37928797 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2323945.68 rows=390185 width=38) (actual time=59.053..29536.415 rows=720499 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1902506.18 rows=800603 width=34) (actual time=59.032..22644.730 rows=1490036 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.034..0.531 rows=56 loops=1)
Q20,1.5,Sort  (cost=11671508.37..11671511.31 rows=1175 width=51) (actual time=9600.376..9600.479 rows=1790 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=11669108.17..11671448.46 rows=1175 width=51) (actual time=9568.786..9598.311 rows=1790 loops=1)
Q1,1.5,Sort  (cost=4232334.55..4232334.57 rows=6 width=20) (actual time=89755.079..89755.079 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4232334.37..4232334.47 rows=6 width=20) (actual time=89755.029..89755.030 rows=4 loops=1)
Q9,1.4,GroupAggregate  (cost=1109663.74..1109667.97 rows=121 width=46) (actual time=91198.259..93792.815 rows=175 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5990.73 rows=597873 width=0) (actual time=4.186..4.186 rows=405760 loops=1)
Q15,1.4,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..120583.47 rows=16058063 width=0) (actual time=119.819..119.819 rows=10728960 loops=1)
Q15,1.4,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..120583.47 rows=16058063 width=0) (actual time=119.700..119.700 rows=10739200 loops=1)
Q10,1.4,->  HashAggregate  (cost=2268446.18..2273955.80 rows=550962 width=175) (actual time=30528.459..30750.600 rows=374996 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2871.92 rows=139695 width=0) (actual time=706.378..706.378 rows=191057 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2906.85..41851.84 rows=139695 width=24) (actual time=714.512..812.475 rows=191057 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..92050.45 rows=9190245 width=0) (actual time=119.705..119.705 rows=10718720 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=100123 width=4) (actual time=0.012..797.800 rows=108402 loops=1)
Q9,1.0,->  Hash Join  (cost=66773.54..351736.46 rows=400492 width=16) (actual time=834.609..4792.956 rows=433608 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=100123 width=4) (actual time=834.166..834.166 rows=108402 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.696..1857.475 rows=300963 loops=1)
Q8,1.0,->  Nested Loop  (cost=421.98..1696850.76 rows=124145 width=20) (actual time=7.007..8961.026 rows=121652 loops=1)
Q8,1.0,->  Nested Loop  (cost=421.55..1497105.25 rows=407930 width=16) (actual time=6.951..4481.518 rows=400200 loops=1)
Q8,1.0,->  Nested Loop  (cost=38752.42..1743906.12 rows=24829 width=16) (actual time=1954.757..11125.652 rows=24349 loops=1)
Q8,1.0,->  Hash Join  (cost=38753.98..1744373.22 rows=24829 width=38) (actual time=1954.812..11163.775 rows=24349 loops=1)
Q8,1.0,->  Hash Join  (cost=38752.13..1735894.74 rows=24829 width=16) (actual time=1954.743..10981.023 rows=24349 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=1945.615..1945.615 rows=300963 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..413.53 rows=13480 width=0) (actual time=4.629..4.629 rows=13365 loops=1)
Q8,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.64 rows=31 width=0) (actual time=0.023..0.023 rows=30 loops=13365)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=416.90..28299.15 rows=13480 width=4) (actual time=6.860..100.175 rows=13365 loops=1)
Q8,1.0,->  Bitmap Heap Scan on lineitem  (cost=4.65..108.65 rows=31 width=20) (actual time=0.044..0.313 rows=30 loops=13365)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.637..362.036 rows=60193 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=8) (actual time=0.006..3214.798 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2110101.54 rows=1460772 width=42) (actual time=601.708..22652.806 rows=1452254 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2121956.03 rows=60791 width=64) (actual time=649.663..23303.031 rows=58554 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..532478.49 rows=1205994 width=30) (actual time=601.686..8923.157 rows=1197163 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.038..562.165 rows=119853 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.033..45.282 rows=8012 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=601.179..601.179 rows=119853 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=47.654..47.654 rows=8012 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=92250.39..1370825.90 rows=799773 width=8) (actual time=120.586..24775.293 rows=794528 loops=1)
Q5,1.0,->  Seq Scan on orders  (cost=0.00..480180.04 rows=2280778 width=8) (actual time=0.014..4421.065 rows=2275896 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.744..2283.365 rows=299838 loops=1)
Q5,1.0,->  Nested Loop  (cost=38342.20..1983658.56 rows=1825424 width=46) (actual time=2397.500..13939.432 rows=1815300 loops=1)
Q5,1.0,->  Hash Join  (cost=43021.20..2002758.41 rows=73017 width=34) (actual time=2460.412..14644.083 rows=72940 loops=1)
Q5,1.0,->  Hash Join  (cost=38341.63..531636.15 rows=456156 width=38) (actual time=2397.478..7675.987 rows=454222 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2395.434..2395.434 rows=299838 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.645..445.597 rows=59968 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5797.94..269772.21 rows=561751 width=20) (actual time=27.890..5722.630 rows=555018 loops=1)
Q3,1.0,->  Hash Join  (cost=106976.31..495535.67 rows=1472528 width=12) (actual time=386.220..6935.922 rows=1473997 loops=1)
Q3,1.0,->  Hash  (cost=495535.67..495535.67 rows=1472528 width=12) (actual time=7399.425..7399.425 rows=1473997 loops=1)
Q3,1.0,->  Hash  (cost=45940.37..45940.37 rows=298960 width=4) (actual time=356.853..356.853 rows=300441 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6850.63 rows=298960 width=0) (actual time=65.385..65.385 rows=300441 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=57298.94..403427.08 rows=7388251 width=16) (actual time=27.361..4214.239 rows=7371832 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=248520.44..1716664.16 rows=32048057 width=12) (actual time=120.282..24218.891 rows=32065594 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6925.37..45940.37 rows=298960 width=4) (actual time=74.306..279.635 rows=300441 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=4) (actual time=0.012..3873.750 rows=15000000 loops=1)
Q22,1.0,->  Hash  (cost=406897.75..406897.75 rows=15134975 width=4) (actual time=7768.568..7768.568 rows=15000000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=598991.78..642507.56 rows=58981 width=20) (actual time=8528.241..8723.807 rows=63713 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6542.90 rows=380787 width=0) (actual time=84.379..84.379 rows=382057 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6638.10..51911.75 rows=380787 width=4) (actual time=93.111..581.289 rows=382057 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.337..57.428 rows=3934 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=58.979..58.979 rows=3934 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.325..56.537 rows=3934 loops=1)
Q2,1.0,->  Sort  (cost=465633.45..469632.33 rows=1599552 width=168) (actual time=6233.796..6362.103 rows=1603331 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.309..146.111 rows=20042 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=7902 width=30) (actual time=0.179..1112.532 rows=7859 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300805.72 rows=1599552 width=168) (actual time=157.315..5103.599 rows=1603360 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=157.178..157.178 rows=20042 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.254..28.366 rows=4008 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.300..28.289 rows=4029 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.54 rows=19999 width=0) (actual time=9.016..9.016 rows=21632 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.282..27.690 rows=4029 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.05..34890.33 rows=22021 width=4) (actual time=12.598..564.851 rows=21632 loops=1)
Q19,1.0,->  Nested Loop  (cost=12892.86..614398.61 rows=1148 width=8) (actual time=32.477..1755.880 rows=1155 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4003.20 rows=399120 width=0) (actual time=4.188..4.188 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.43 rows=8070 width=0) (actual time=3.513..3.513 rows=7877 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.59 rows=7989 width=0) (actual time=3.605..3.605 rows=7987 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.39 rows=7969 width=0) (actual time=3.450..3.450 rows=8051 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.74 rows=31 width=0) (actual time=0.025..0.025 rows=30 loops=4810)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12888.12..26658.00 rows=4790 width=30) (actual time=31.989..288.907 rows=4810 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..404477.52 rows=15044952 width=16) (actual time=0.005..2856.777 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1670257.61 rows=60165261 width=8) (actual time=0.005..8638.531 rows=60045379 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1670257.61 rows=60165261 width=8) (actual time=0.014..7692.104 rows=60045379 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.023..0.040 rows=30 loops=1967)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.023..0.040 rows=30 loops=1967)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.21 rows=1978 width=0) (actual time=1.453..1.453 rows=1967 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=72.70..6561.78 rows=1978 width=4) (actual time=1.825..34.039 rows=1967 loops=1)
Q16,1.0,Sort  (cost=413424.28..413493.94 rows=27863 width=40) (actual time=9980.053..9983.130 rows=27839 loops=1)
Q16,1.0,->  Hash  (cost=51019.13..51019.13 rows=297200 width=40) (actual time=1311.457..1311.457 rows=296483 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403658.51..411367.14 rows=27863 width=40) (actual time=9181.919..9920.283 rows=27839 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2488.81..51019.13 rows=297200 width=40) (actual time=35.073..1188.362 rows=296483 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=121153.41..1434878.35 rows=2279738 width=12) (actual time=120.457..21273.961 rows=2244904 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=121153.41..1434878.35 rows=2279738 width=12) (actual time=120.565..22424.427 rows=2244904 loops=1)
Q14,1.0,->  Hash Join  (cost=93562.29..1149245.51 rows=769979 width=29) (actual time=1660.873..25609.140 rows=749469 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8040.29..1052173.82 rows=769979 width=12) (actual time=120.271..23292.575 rows=749469 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..444735.19 rows=15014055 width=8) (actual time=0.017..7319.735 rows=14853070 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..738974.01 rows=15014055 width=8) (actual time=1064.319..17129.891 rows=15353086 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..405686.04 rows=15089904 width=20) (actual time=0.010..4737.266 rows=15000000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2429554.48 rows=289227 width=15) (actual time=0.129..23044.325 rows=313313 loops=1)
Q12,1.0,->  Hash Join  (cost=594309.84..3032902.67 rows=289227 width=27) (actual time=9440.799..32832.924 rows=313313 loops=1)
Q12,1.0,->  Hash  (cost=405686.04..405686.04 rows=15089904 width=20) (actual time=9371.168..9371.168 rows=15000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.307..40.363 rows=4004 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.293..25.397 rows=4004 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286562.41 rows=319910 width=8) (actual time=26.347..3742.326 rows=320320 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286562.41 rows=319910 width=12) (actual time=41.487..4081.212 rows=320320 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=41.430..41.430 rows=4004 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=26.269..26.269 rows=4004 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.266..24.717 rows=4004 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.289..39.681 rows=4004 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1831520.45 rows=60020348 width=20) (actual time=0.015..18531.301 rows=59486163 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1831520.45 rows=14978025 width=12) (actual time=0.038..17525.807 rows=14822845 loops=1)
Q10,1.0,->  Hash  (cost=269645.56..269645.56 rows=556735 width=8) (actual time=5348.207..5348.207 rows=561012 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5746.53..269645.56 rows=556735 width=8) (actual time=27.709..5147.341 rows=561012 loops=1)
