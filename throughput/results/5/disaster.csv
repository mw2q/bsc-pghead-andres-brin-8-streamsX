Q21,705206.0,->  Nested Loop Semi Join  (cost=2406.31..2845258.76 rows=1 width=34) (actual time=58.082..33577.290 rows=705206 loops=1)
Q18,358841.0,->  GroupAggregate  (cost=10195490.25..11024413.10 rows=30142649 width=39) (actual time=67127.939..67128.210 rows=84 loops=1)
Q3,315606.1,->  Sort  (cost=2541712.32..2549602.47 rows=3156061 width=20) (actual time=35941.634..35941.635 rows=10 loops=1)
Q18,89731.6,->  Hash Join  (cost=2187962.58..2803958.09 rows=7537460 width=39) (actual time=43365.928..48979.762 rows=84 loops=1)
Q18,89731.6,->  Hash Join  (cost=2118934.58..2621868.19 rows=7537460 width=20) (actual time=42442.251..48055.746 rows=84 loops=1)
Q18,89731.6,->  Hash  (cost=2803958.09..2803958.09 rows=7537460 width=39) (actual time=48979.949..48979.949 rows=84 loops=1)
Q18,51263.0,->  Sort  (cost=10195490.25..10270846.88 rows=30142649 width=39) (actual time=67127.928..67127.976 rows=588 loops=1)
Q18,51263.0,->  Hash Join  (cost=2898176.34..5626759.04 rows=30142649 width=39) (actual time=49043.774..67127.028 rows=588 loops=1)
Q18,48951.7,->  Hash  (cost=2067535.26..2067535.26 rows=4111946 width=4) (actual time=42315.305..42315.305 rows=84 loops=1)
Q18,48951.7,->  HashAggregate  (cost=1975016.47..2026415.80 rows=4111946 width=8) (actual time=37602.673..42315.086 rows=84 loops=1)
Q21,39933.0,->  Nested Loop Anti Join  (cost=2406.88..2845260.54 rows=1 width=26) (actual time=58.263..36414.004 rows=39933 loops=1)
Q10,28592.3,->  Sort  (cost=2291509.25..2292938.86 rows=571846 width=175) (actual time=28919.346..28919.350 rows=20 loops=1)
Q9,25158.9,->  Sort  (cost=1155246.69..1155247.01 rows=129 width=46) (actual time=87792.848..88347.612 rows=3245505 loops=1)
Q9,25158.9,->  Nested Loop  (cost=66849.58..1155238.18 rows=129 width=24) (actual time=673.690..78887.266 rows=3245505 loops=1)
Q9,25158.9,->  Nested Loop  (cost=66849.15..1155175.66 rows=129 width=24) (actual time=673.669..48835.412 rows=3245505 loops=1)
Q9,25158.9,->  Nested Loop  (cost=66848.85..1155134.04 rows=129 width=28) (actual time=673.657..38987.333 rows=3245505 loops=1)
Q9,25158.9,->  Hash Join  (cost=66851.14..1155242.17 rows=129 width=46) (actual time=673.743..82119.769 rows=3245505 loops=1)
Q2,4750.0,->  Merge Join  (cost=465633.87..889793.66 rows=1 width=190) (actual time=6298.396..8012.347 rows=4750 loops=1)
Q21,3988.0,->  HashAggregate  (cost=2845260.54..2845260.55 rows=1 width=26) (actual time=36463.453..36464.468 rows=3988 loops=1)
Q15,3764.0,->  Subquery Scan on revenue5  (cost=1365431.22..1365515.91 rows=3764 width=12) (actual time=41277.311..41297.172 rows=1 loops=1)
Q15,3764.0,->  Sort  (cost=1365739.45..1365748.86 rows=3764 width=12) (actual time=41297.193..41297.193 rows=1 loops=1)
Q15,3764.0,Merge Join  (cost=2714263.30..2719360.97 rows=3764 width=79) (actual time=41310.572..41310.575 rows=1 loops=1)
Q15,3764.0,->  HashAggregate  (cost=1365431.22..1365478.27 rows=3764 width=12) (actual time=41277.310..41297.170 rows=1 loops=1)
Q7,765.0,Sort  (cost=2120994.84..2121002.49 rows=3060 width=64) (actual time=24937.691..24937.691 rows=4 loops=1)
Q7,765.0,->  HashAggregate  (cost=2120771.77..2120817.67 rows=3060 width=64) (actual time=24937.621..24937.631 rows=4 loops=1)
Q8,366.5,Sort  (cost=1714040.12..1714041.95 rows=733 width=38) (actual time=10737.843..10737.843 rows=2 loops=1)
Q8,366.5,->  HashAggregate  (cost=1713992.41..1714005.24 rows=733 width=38) (actual time=10737.805..10737.806 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2845260.56..2845260.57 rows=1 width=26) (actual time=36465.603..36465.609 rows=100 loops=1)
Q21,100.0,Limit  (cost=2845260.56..2845260.57 rows=1 width=26) (actual time=36465.604..36465.623 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=889793.67..889793.67 rows=1 width=190) (actual time=8017.016..8017.027 rows=100 loops=1)
Q2,100.0,Limit  (cost=889793.67..889793.67 rows=1 width=190) (actual time=8017.018..8017.042 rows=100 loops=1)
Q11,34.3,Sort  (cost=614372.93..615172.70 rows=319910 width=12) (actual time=7666.838..7667.892 rows=9322 loops=1)
Q11,34.3,->  HashAggregate  (cost=292160.84..296159.71 rows=319910 width=12) (actual time=7586.542..7661.627 rows=9322 loops=1)
Q3,27.8,->  HashAggregate  (cost=2441950.36..2473510.97 rows=3156061 width=20) (actual time=35870.782..35920.641 rows=113180 loops=1)
Q15,26.5,->  HashAggregate  (cost=1348438.86..1348476.50 rows=3764 width=12) (actual time=21624.678..21663.952 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.005..0.005 rows=1 loops=731496)
Q14,13.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7929.91 rows=778191 width=0) (actual time=119.592..119.592 rows=10718720 loops=1)
Q3,10.5,->  Hash Join  (cost=766686.73..2394609.45 rows=3156061 width=20) (actual time=8391.215..35580.953 rows=298402 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2400.11 rows=318413 width=0) (actual time=34.935..34.935 rows=3246080 loops=1)
Q9,7.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.015..0.077 rows=7 loops=432928)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.605..3.605 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.635..3.635 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.238..0.238 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.233..0.233 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.262..0.262 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.267..0.267 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.255..0.255 rows=23040 loops=1)
Q5,5.0,Sort  (cost=1976311.05..1976311.11 rows=25 width=34) (actual time=14156.616..14156.616 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1976310.22..1976310.47 rows=25 width=34) (actual time=14156.571..14156.572 rows=5 loops=1)
Q4,5.0,Sort  (cost=1482857.94..1482857.95 rows=1 width=16) (actual time=11817.668..11817.668 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.13 rows=5 width=4) (actual time=0.012..0.012 rows=1 loops=572975)
Q4,5.0,->  HashAggregate  (cost=1482857.92..1482857.93 rows=1 width=16) (actual time=11817.620..11817.620 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=705206)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5723.81 rows=568381 width=0) (actual time=27.513..27.513 rows=2540800 loops=1)
Q13,4.4,Sort  (cost=849175.77..849176.27 rows=200 width=8) (actual time=26236.950..26236.952 rows=45 loops=1)
Q13,4.4,->  HashAggregate  (cost=849166.13..849168.13 rows=200 width=8) (actual time=26236.881..26236.891 rows=45 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5818.38 rows=577838 width=0) (actual time=27.491..27.491 rows=2556160 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.011..0.011 rows=1 loops=1194969)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.01 rows=15 width=16) (actual time=0.009..0.010 rows=4 loops=454404)
Q17,3.6,->  Nested Loop  (cost=82.65..113800.06 rows=20134 width=4) (actual time=1.570..200.851 rows=5510 loops=1)
Q4,3.3,->  Nested Loop Semi Join  (cost=5866.47..1482081.20 rows=155345 width=16) (actual time=27.712..11535.317 rows=525421 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.014..0.041 rows=3 loops=2039)
Q5,3.2,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..61842.57 rows=8240342 width=0) (actual time=27.443..27.443 rows=2556160 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.50 rows=1 width=8) (actual time=0.306..0.375 rows=3 loops=21569)
Q3,2.9,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..55971.67 rows=7457556 width=0) (actual time=27.699..27.699 rows=2553600 loops=1)
Q3,2.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..241277.44 rows=32150591 width=0) (actual time=119.701..119.701 rows=10739200 loops=1)
Q15,2.7,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.016..9.953 rows=35977 loops=1)
Q22,2.3,Sort  (cost=694546.12..694546.13 rows=3 width=20) (actual time=9601.248..9601.248 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=641739.93..641739.98 rows=3 width=20) (actual time=9601.205..9601.208 rows=7 loops=1)
Q20,2.1,->  Nested Loop  (cost=677.98..10613339.86 rows=26715 width=4) (actual time=13.324..8414.055 rows=58447 loops=1)
Q20,2.1,->  Hash  (cost=10613339.86..10613339.86 rows=26715 width=4) (actual time=8448.114..8448.114 rows=58447 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.034..0.050 rows=2 loops=6466)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2016.33 rows=200433 width=0) (actual time=4.219..4.219 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=403135.44..404611.80 rows=590544 width=40) (actual time=10375.152..10516.536 rows=1184791 loops=1)
Q16,2.0,->  Hash Join  (cost=54663.38..346526.82 rows=590544 width=40) (actual time=1425.592..6772.867 rows=1184791 loops=1)
Q12,2.0,Sort  (cost=3047130.68..3047130.68 rows=1 width=27) (actual time=33749.661..33749.661 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3047130.66..3047130.67 rows=1 width=27) (actual time=33749.612..33749.613 rows=2 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.545..3817.838 rows=7995520 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1817038.30 rows=20015075 width=8) (actual time=0.004..16549.259 rows=37928797 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2323945.68 rows=390185 width=38) (actual time=58.017..29431.986 rows=731496 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1902506.18 rows=800603 width=34) (actual time=57.905..22503.247 rows=1512868 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.039..0.505 rows=56 loops=1)
Q20,1.6,Sort  (cost=10616107.96..10616110.63 rows=1069 width=51) (actual time=8480.630..8480.731 rows=1809 loops=1)
Q20,1.6,->  Hash Semi Join  (cost=10613716.79..10616054.17 rows=1069 width=51) (actual time=8448.598..8478.229 rows=1809 loops=1)
Q10,1.6,->  Hash Join  (cost=346430.94..2256278.02 rows=571846 width=175) (actual time=6538.310..27044.588 rows=940687 loops=1)
Q10,1.6,->  Hash Join  (cost=346429.38..2248413.57 rows=571846 width=153) (actual time=6538.280..26705.793 rows=940687 loops=1)
Q10,1.6,->  Hash Join  (cost=277401.38..2170807.88 rows=571846 width=12) (actual time=4996.907..24573.678 rows=940687 loops=1)
Q10,1.6,->  HashAggregate  (cost=2270574.17..2276292.63 rows=571846 width=175) (actual time=28602.667..28788.435 rows=354582 loops=1)
Q1,1.5,Sort  (cost=4209827.47..4209827.49 rows=6 width=20) (actual time=89010.691..89010.691 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4209827.29..4209827.40 rows=6 width=20) (actual time=89010.638..89010.639 rows=4 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5990.73 rows=597873 width=0) (actual time=4.184..4.184 rows=405760 loops=1)
Q9,1.3,GroupAggregate  (cost=1155246.69..1155251.20 rows=129 width=46) (actual time=87802.562..90511.235 rows=175 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2868.14 rows=139317 width=0) (actual time=718.254..718.254 rows=190130 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2902.97..41838.04 rows=139317 width=24) (actual time=726.569..877.651 rows=190130 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91470.30 rows=9132230 width=0) (actual time=118.712..118.712 rows=10686720 loops=1)
Q20,1.1,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..672.54 rows=17999 width=0) (actual time=9.153..9.153 rows=21569 loops=1)
Q18,1.1,Limit  (cost=10195490.25..10195493.00 rows=100 width=39) (actual time=67127.942..67128.224 rows=84 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=106103 width=4) (actual time=0.010..641.546 rows=108232 loops=1)
Q9,1.0,->  Hash Join  (cost=66848.29..352050.41 rows=424412 width=16) (actual time=673.605..4635.160 rows=432928 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=106103 width=4) (actual time=673.087..673.087 rows=108232 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.720..2196.625 rows=299493 loops=1)
Q8,1.0,->  Nested Loop  (cost=407.52..1666193.81 rows=121318 width=20) (actual time=6.677..8159.850 rows=120600 loops=1)
Q8,1.0,->  Nested Loop  (cost=407.08..1470997.21 rows=398640 width=16) (actual time=6.625..4049.759 rows=398098 loops=1)
Q8,1.0,->  Nested Loop  (cost=38737.96..1713050.62 rows=24264 width=16) (actual time=2299.104..10660.855 rows=24056 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..109.24 rows=31 width=20) (actual time=0.025..0.283 rows=30 loops=13283)
Q8,1.0,->  Hash Join  (cost=38739.52..1713507.13 rows=24264 width=38) (actual time=2299.144..10697.739 rows=24056 loops=1)
Q8,1.0,->  Hash Join  (cost=38737.67..1705221.54 rows=24264 width=16) (actual time=2299.091..10522.573 rows=24056 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2290.355..2290.355 rows=299493 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..403.23 rows=13173 width=0) (actual time=4.346..4.346 rows=13283 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=406.52..27921.42 rows=13173 width=4) (actual time=6.575..169.121 rows=13283 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.641..429.179 rows=59899 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..404880.36 rows=15059936 width=8) (actual time=0.006..2923.927 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2108014.45 rows=1459308 width=42) (actual time=846.419..24093.340 rows=1451178 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2119860.81 rows=60731 width=64) (actual time=894.052..24842.761 rows=58075 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..532007.47 rows=1204795 width=30) (actual time=846.312..9850.615 rows=1194969 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.036..800.861 rows=119935 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.034..45.297 rows=8013 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=845.807..845.807 rows=119935 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=47.498..47.498 rows=8013 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91669.02..1365749.20 rows=794899 width=8) (actual time=119.577..27458.945 rows=795701 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.701..2080.545 rows=299838 loops=1)
Q5,1.0,->  Nested Loop  (cost=100762.79..1956283.04 rows=1849178 width=46) (actual time=2217.111..13329.633 rows=1816135 loops=1)
Q5,1.0,->  Hash Join  (cost=105441.79..1975570.55 rows=73967 width=34) (actual time=2272.299..14077.597 rows=72605 loops=1)
Q5,1.0,->  Hash Join  (cost=100762.22..493209.85 rows=462417 width=38) (actual time=2217.082..8029.451 rows=454404 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2187.496..2187.496 rows=299838 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=62420.59..441573.72 rows=2312087 width=8) (actual time=27.607..4909.412 rows=2275296 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.664..406.120 rows=59968 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5865.90..268419.62 rows=568381 width=20) (actual time=27.679..4133.302 rows=572975 loops=1)
Q3,1.0,->  Hash Join  (cost=107495.67..498818.49 rows=1484253 width=12) (actual time=399.487..7778.515 rows=1475605 loops=1)
Q3,1.0,->  Hash  (cost=498818.49..498818.49 rows=1484253 width=12) (actual time=8264.292..8264.292 rows=1475605 loops=1)
Q3,1.0,->  Hash  (cost=45927.86..45927.86 rows=298540 width=4) (actual time=369.726..369.726 rows=299751 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6843.48 rows=298540 width=0) (actual time=66.509..66.509 rows=299751 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=57836.06..406350.51 rows=7457556 width=16) (actual time=27.860..4977.450 rows=7396675 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=249315.08..1725112.47 rows=32150591 width=12) (actual time=120.431..21537.878 rows=31964382 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6918.11..45927.86 rows=298540 width=4) (actual time=75.251..292.966 rows=299751 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=4) (actual time=0.024..3935.835 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=406090.48..406090.48 rows=15104948 width=4) (actual time=8522.976..8522.976 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=597805.30..641298.77 rows=58822 width=20) (actual time=9316.722..9578.828 rows=63316 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6515.18 rows=379756 width=0) (actual time=90.569..90.569 rows=381118 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6610.12..51856.72 rows=379756 width=4) (actual time=99.805..591.590 rows=381118 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.261..56.163 rows=3988 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=57.866..57.866 rows=3988 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.248..55.212 rows=3988 loops=1)
Q2,1.0,->  Sort  (cost=465633.45..469632.33 rows=1599552 width=168) (actual time=6298.127..6417.425 rows=1603287 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.311..157.888 rows=20042 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8028 width=30) (actual time=0.089..953.203 rows=8061 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300805.72 rows=1599552 width=168) (actual time=169.767..5213.821 rows=1603360 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=169.613..169.613 rows=20042 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.255..30.657 rows=4008 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.292..28.457 rows=4054 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.277..27.858 rows=4054 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=677.55..33178.44 rows=20019 width=4) (actual time=12.695..300.665 rows=21569 loops=1)
Q19,1.0,->  Nested Loop  (cost=12892.32..613018.03 rows=1144 width=8) (actual time=33.996..2385.420 rows=1142 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4003.20 rows=399120 width=0) (actual time=4.191..4.191 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.91 rows=8019 width=0) (actual time=3.757..3.757 rows=7920 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.67 rows=7994 width=0) (actual time=3.452..3.452 rows=8015 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.31 rows=7961 width=0) (actual time=3.728..3.728 rows=8172 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.74 rows=31 width=0) (actual time=0.026..0.026 rows=30 loops=4737)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12887.58..26632.02 rows=4779 width=30) (actual time=33.041..297.544 rows=4737 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=16) (actual time=0.006..2737.616 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1673589.98 rows=60285298 width=8) (actual time=0.007..9670.608 rows=60046221 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1673589.98 rows=60285298 width=8) (actual time=0.039..7080.061 rows=60046221 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.024..0.043 rows=30 loops=2039)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.024..0.043 rows=30 loops=2039)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.39 rows=1996 width=0) (actual time=0.907..0.907 rows=2039 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=72.89..6616.51 rows=1996 width=4) (actual time=1.230..13.223 rows=2039 loops=1)
Q16,1.0,Sort  (cost=412836.53..412905.73 rows=27682 width=40) (actual time=11172.833..11176.191 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=50956.25..50956.25 rows=295272 width=40) (actual time=1423.038..1423.038 rows=296365 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403135.44..410794.06 rows=27682 width=40) (actual time=10375.208..11112.656 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2473.93..50956.25 rows=295272 width=40) (actual time=35.004..1297.424 rows=296365 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..85989.66 rows=11445554 width=0) (actual time=118.819..118.819 rows=10676480 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..85989.66 rows=11445554 width=0) (actual time=118.339..118.339 rows=10686720 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=86556.07..1325782.38 rows=2265648 width=12) (actual time=119.132..19453.266 rows=2247113 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=86556.07..1325782.38 rows=2265648 width=12) (actual time=119.619..17794.072 rows=2247113 loops=1)
Q14,1.0,->  Hash Join  (cost=93646.46..1150624.63 rows=778191 width=29) (actual time=1609.563..23555.536 rows=772855 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8124.46..1053429.76 rows=778191 width=12) (actual time=120.606..21339.849 rows=772855 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..443852.85 rows=14939264 width=8) (actual time=0.021..7608.056 rows=14838035 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..736969.81 rows=14939264 width=8) (actual time=796.514..17136.758 rows=15338054 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=20) (actual time=0.010..4923.847 rows=15000000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2436758.41 rows=293073 width=15) (actual time=0.050..23749.699 rows=311351 loops=1)
Q12,1.0,->  Hash Join  (cost=596084.94..3042001.88 rows=293073 width=27) (actual time=9383.672..33431.522 rows=311351 loops=1)
Q12,1.0,->  Hash  (cost=406897.75..406897.75 rows=15134975 width=20) (actual time=9337.957..9337.957 rows=15000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.299..40.439 rows=4007 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.294..25.472 rows=4007 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286562.41 rows=319910 width=8) (actual time=26.384..3392.729 rows=320560 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286562.41 rows=319910 width=12) (actual time=41.496..3868.227 rows=320560 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=41.455..41.455 rows=4007 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=26.336..26.336 rows=4007 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.269..24.749 rows=4007 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.282..39.753 rows=4007 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1831520.45 rows=59457671 width=20) (actual time=0.014..18361.383 rows=58982446 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1831520.45 rows=14978025 width=12) (actual time=0.021..16679.775 rows=14807964 loops=1)
Q10,1.0,->  Hash  (cost=270178.41..270178.41 rows=577838 width=8) (actual time=4993.542..4993.542 rows=561517 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5962.84..270178.41 rows=577838 width=8) (actual time=27.656..4816.946 rows=561517 loops=1)
