BEGIN;
BEGIN
EXPLAIN (ANALYZE, BUFFERS)
select
	cntrycode,
	count(*) as numcust,
	sum(c_acctbal) as totacctbal
from
	(
		select
			substr(c_phone, 1, 2) as cntrycode,
			c_acctbal
		from
			customer
		where
			substr(c_phone, 1, 2) in
				('13', '25', '14', '33', '24', '27', '23')
			and c_acctbal > (
				select
					avg(c_acctbal)
				from
					customer
				where
					c_acctbal > 0.00
					and substr(c_phone, 1, 2) in
						('13', '25', '14', '33', '24', '27', '23')
			)
			and not exists (
				select
					*
				from
					orders
				where
					o_custkey = c_custkey
			)
	) as vip
group by
	cntrycode
order by
	cntrycode;
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=694546.12..694546.13 rows=3 width=20) (actual time=9601.248..9601.248 rows=7 loops=1)
   Sort Key: (substr((customer.c_phone)::text, 1, 2))
   Sort Method: quicksort  Memory: 25kB
   Buffers: shared hit=236105 read=91018 dirtied=254 written=39
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=52806.11..52806.12 rows=1 width=4) (actual time=664.900..664.900 rows=1 loops=1)
           Buffers: shared hit=12 read=36328
           ->  Bitmap Heap Scan on customer customer_1  (cost=6610.12..51856.72 rows=379756 width=4) (actual time=99.805..591.590 rows=381118 loops=1)
                 Recheck Cond: ((substr((c_phone)::text, 1, 2) = ANY ('{13,25,14,33,24,27,23}'::text[])) AND (c_acctbal > 0::double precision))
                 Heap Blocks: exact=35278
                 Buffers: shared hit=12 read=36328
                 ->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6515.18 rows=379756 width=0) (actual time=90.569..90.569 rows=381118 loops=1)
                       Index Cond: (substr((c_phone)::text, 1, 2) = ANY ('{13,25,14,33,24,27,23}'::text[]))
                       Buffers: shared hit=10 read=1052
   ->  HashAggregate  (cost=641739.93..641739.98 rows=3 width=20) (actual time=9601.205..9601.208 rows=7 loops=1)
         Group Key: substr((customer.c_phone)::text, 1, 2)
         Buffers: shared hit=236102 read=91018 dirtied=254 written=39
         ->  Hash Anti Join  (cost=597805.30..641298.77 rows=58822 width=20) (actual time=9316.722..9578.828 rows=63316 loops=1)
               Hash Cond: (customer.c_custkey = orders.o_custkey)
               Buffers: shared hit=236102 read=91018 dirtied=254 written=39
               ->  Bitmap Heap Scan on customer  (cost=2902.97..41838.04 rows=139317 width=24) (actual time=726.569..877.651 rows=190130 loops=1)
                     Recheck Cond: ((substr((c_phone)::text, 1, 2) = ANY ('{13,25,14,33,24,27,23}'::text[])) AND (c_acctbal > $0))
                     Heap Blocks: exact=35191
                     Buffers: shared hit=35214 read=36862
                     ->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2868.14 rows=139317 width=0) (actual time=718.254..718.254 rows=190130 loops=1)
                           Index Cond: ((substr((c_phone)::text, 1, 2) = ANY ('{13,25,14,33,24,27,23}'::text[])) AND (c_acctbal > $0))
                           Buffers: shared hit=23 read=36862
               ->  Hash  (cost=406090.48..406090.48 rows=15104948 width=4) (actual time=8522.976..8522.976 rows=15015000 loops=1)
                     Buckets: 16777216  Batches: 1  Memory Usage: 658944kB
                     Buffers: shared hit=200885 read=54156 dirtied=254 written=39
                     ->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=4) (actual time=0.024..3935.835 rows=15015000 loops=1)
                           Buffers: shared hit=200885 read=54156 dirtied=254 written=39
 Planning time: 2.777 ms
 Execution time: 9605.018 ms
(34 rows)

COMMIT;
COMMIT
