Q21,708400.0,->  Nested Loop Semi Join  (cost=2406.31..2848126.95 rows=1 width=34) (actual time=31.602..34131.417 rows=708400 loops=1)
Q3,316482.7,->  Sort  (cost=2551195.22..2559107.29 rows=3164827 width=20) (actual time=34294.987..34294.987 rows=10 loops=1)
Q18,302618.9,->  GroupAggregate  (cost=10235701.75..11067903.95 rows=30261898 width=39) (actual time=66491.405..66491.732 rows=100 loops=1)
Q18,75674.8,->  Hash Join  (cost=2195776.05..2814061.74 rows=7567488 width=39) (actual time=42016.575..48113.826 rows=100 loops=1)
Q18,75674.8,->  Hash Join  (cost=2126748.05..2631521.42 rows=7567488 width=20) (actual time=40893.256..46990.239 rows=100 loops=1)
Q18,75674.8,->  Hash  (cost=2814061.74..2814061.74 rows=7567488 width=39) (actual time=48114.005..48114.005 rows=100 loops=1)
Q18,43231.2,->  Sort  (cost=10235701.75..10311356.50 rows=30261898 width=39) (actual time=66491.394..66491.433 rows=700 loops=1)
Q18,43231.2,->  Hash Join  (cost=2908655.34..5648032.75 rows=30261898 width=39) (actual time=48144.967..66490.399 rows=700 loops=1)
Q18,41119.4,->  Hash  (cost=2075348.72..2075348.72 rows=4111946 width=4) (actual time=40815.904..40815.904 rows=100 loops=1)
Q18,41119.4,->  HashAggregate  (cost=1982829.94..2034229.26 rows=4111946 width=8) (actual time=36031.842..40815.707 rows=100 loops=1)
Q21,39901.0,->  Nested Loop Anti Join  (cost=2406.88..2848128.73 rows=1 width=26) (actual time=32.427..36900.514 rows=39901 loops=1)
Q10,28168.5,->  Sort  (cost=2290335.41..2291743.84 rows=563371 width=175) (actual time=31769.943..31769.946 rows=20 loops=1)
Q9,24965.7,->  Sort  (cost=1169819.36..1169819.69 rows=131 width=46) (actual time=87981.091..88500.329 rows=3270512 loops=1)
Q9,24965.7,->  Nested Loop  (cost=66874.60..1169810.74 rows=131 width=24) (actual time=709.483..79315.920 rows=3270512 loops=1)
Q9,24965.7,->  Nested Loop  (cost=66874.17..1169747.25 rows=131 width=24) (actual time=709.467..50337.829 rows=3270512 loops=1)
Q9,24965.7,->  Nested Loop  (cost=66873.88..1169704.98 rows=131 width=28) (actual time=709.457..40163.936 rows=3270512 loops=1)
Q9,24965.7,->  Hash Join  (cost=66876.17..1169814.76 rows=131 width=46) (actual time=709.533..82462.690 rows=3270512 loops=1)
Q2,4673.0,->  Merge Join  (cost=465633.87..891161.56 rows=1 width=190) (actual time=6426.086..8388.686 rows=4673 loops=1)
Q21,4007.0,->  HashAggregate  (cost=2848128.73..2848128.74 rows=1 width=26) (actual time=36953.727..36954.999 rows=4007 loops=1)
Q15,3776.0,->  Subquery Scan on revenue4  (cost=1879479.12..1879564.08 rows=3776 width=12) (actual time=44247.221..44262.828 rows=1 loops=1)
Q15,3776.0,->  Sort  (cost=1879788.42..1879797.86 rows=3776 width=12) (actual time=44262.847..44262.847 rows=1 loops=1)
Q15,3776.0,Merge Join  (cost=3742288.77..3747386.61 rows=3776 width=79) (actual time=44293.891..44293.892 rows=1 loops=1)
Q15,3776.0,->  HashAggregate  (cost=1879479.12..1879526.32 rows=3776 width=12) (actual time=44247.219..44262.826 rows=1 loops=1)
Q7,765.0,Sort  (cost=2131461.80..2131469.45 rows=3060 width=64) (actual time=23756.894..23756.894 rows=4 loops=1)
Q7,765.0,->  HashAggregate  (cost=2131238.73..2131284.63 rows=3060 width=64) (actual time=23756.824..23756.835 rows=4 loops=1)
Q8,366.5,Sort  (cost=1725327.90..1725329.73 rows=733 width=38) (actual time=10485.717..10485.717 rows=2 loops=1)
Q8,366.5,->  HashAggregate  (cost=1725280.19..1725293.02 rows=733 width=38) (actual time=10485.674..10485.674 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2848128.75..2848128.76 rows=1 width=26) (actual time=36956.159..36956.165 rows=100 loops=1)
Q21,100.0,Limit  (cost=2848128.75..2848128.76 rows=1 width=26) (actual time=36956.162..36956.179 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=891161.57..891161.57 rows=1 width=190) (actual time=8393.581..8393.594 rows=100 loops=1)
Q2,100.0,Limit  (cost=891161.57..891161.57 rows=1 width=190) (actual time=8393.582..8393.608 rows=100 loops=1)
Q11,30.8,Sort  (cost=614372.93..615172.70 rows=319910 width=12) (actual time=8767.052..8768.244 rows=10364 loops=1)
Q11,30.8,->  HashAggregate  (cost=292160.84..296159.71 rows=319910 width=12) (actual time=8687.270..8761.305 rows=10364 loops=1)
Q3,27.7,->  HashAggregate  (cost=2451156.18..2482804.45 rows=3164827 width=20) (actual time=34232.715..34273.755 rows=113981 loops=1)
Q15,26.4,->  HashAggregate  (cost=1862415.08..1862452.84 rows=3776 width=12) (actual time=23302.620..23330.205 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.005..0.005 rows=1 loops=734959)
Q14,13.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7802.18 rows=765418 width=0) (actual time=118.570..118.570 rows=10686720 loops=1)
Q3,10.4,->  Hash Join  (cost=767684.19..2403683.77 rows=3164827 width=20) (actual time=8496.732..33944.883 rows=301979 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2421.56 rows=321273 width=0) (actual time=34.902..34.902 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.014..0.080 rows=8 loops=435372)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.602..3.602 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.607..3.607 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.240..0.240 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.290..0.290 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.256..0.256 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.263..0.263 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.249..0.249 rows=23040 loops=1)
Q5,5.0,Sort  (cost=1960143.59..1960143.65 rows=25 width=34) (actual time=19346.550..19346.550 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1960142.76..1960143.01 rows=25 width=34) (actual time=19346.504..19346.507 rows=5 loops=1)
Q4,5.0,Sort  (cost=1493119.20..1493119.21 rows=1 width=16) (actual time=14925.108..14925.108 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.07 rows=5 width=4) (actual time=0.014..0.014 rows=1 loops=573830)
Q4,5.0,->  HashAggregate  (cost=1493119.18..1493119.19 rows=1 width=16) (actual time=14925.061..14925.062 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.003..0.003 rows=1 loops=708400)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5813.52 rows=577352 width=0) (actual time=27.706..27.706 rows=2545920 loops=1)
Q13,4.4,Sort  (cost=850652.07..850652.57 rows=200 width=8) (actual time=27661.336..27661.338 rows=45 loops=1)
Q13,4.4,->  HashAggregate  (cost=850642.43..850644.43 rows=200 width=8) (actual time=27661.263..27661.274 rows=45 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5732.74 rows=569274 width=0) (actual time=27.479..27.479 rows=2556160 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.010..0.011 rows=1 loops=1205488)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.01 rows=15 width=16) (actual time=0.018..0.020 rows=4 loops=455662)
Q17,3.7,->  Nested Loop  (cost=82.46..112726.57 rows=19844 width=4) (actual time=1.634..197.514 rows=5277 loops=1)
Q4,3.3,->  Nested Loop Semi Join  (cost=5958.42..1492331.77 rows=157483 width=16) (actual time=27.908..14624.774 rows=525939 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.014..0.034 rows=3 loops=1994)
Q5,3.2,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..61352.59 rows=8175012 width=0) (actual time=27.220..27.220 rows=2535680 loops=1)
Q15,3.2,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..256928.41 rows=34237388 width=0) (actual time=119.717..119.717 rows=10686720 loops=1)
Q15,3.2,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..256928.41 rows=34237388 width=0) (actual time=118.010..118.010 rows=10696960 loops=1)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..244476.45 rows=32577127 width=0) (actual time=119.381..119.381 rows=10750720 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.50 rows=1 width=8) (actual time=0.295..0.366 rows=3 loops=21593)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..55253.35 rows=7361780 width=0) (actual time=27.476..27.476 rows=2556160 loops=1)
Q22,2.3,Sort  (cost=695901.10..695901.11 rows=3 width=20) (actual time=9494.308..9494.309 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=642986.71..642986.75 rows=3 width=20) (actual time=9494.262..9494.264 rows=7 loops=1)
Q20,2.2,->  Nested Loop  (cost=678.00..10613341.19 rows=26715 width=4) (actual time=13.183..8249.820 rows=58796 loops=1)
Q20,2.2,->  Hash  (cost=10613341.19..10613341.19 rows=26715 width=4) (actual time=8283.851..8283.851 rows=58796 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.039..0.055 rows=2 loops=6382)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2016.33 rows=200433 width=0) (actual time=4.217..4.217 rows=405760 loops=1)
Q12,2.0,Sort  (cost=3031976.81..3031976.81 rows=1 width=27) (actual time=31809.773..31809.773 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3031976.79..3031976.80 rows=1 width=27) (actual time=31809.727..31809.728 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=346107.66..2255626.33 rows=563371 width=175) (actual time=7678.462..29410.473 rows=1138041 loops=1)
Q10,2.0,->  Hash Join  (cost=346106.09..2247878.41 rows=563371 width=153) (actual time=7678.429..28997.671 rows=1138041 loops=1)
Q10,2.0,->  Hash Join  (cost=277078.09..2170399.85 rows=563371 width=12) (actual time=6051.592..26580.970 rows=1138041 loops=1)
Q16,1.9,->  Sort  (cost=403912.78..405403.46 rows=596272 width=40) (actual time=10046.875..10186.657 rows=1191942 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.603..3711.130 rows=7995520 loops=1)
Q16,1.9,->  Hash Join  (cost=54792.84..346713.56 rows=596272 width=40) (actual time=1280.394..6514.352 rows=1191942 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1818861.34 rows=20035156 width=8) (actual time=0.016..16951.126 rows=37966905 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2326281.20 rows=390576 width=38) (actual time=31.569..30106.533 rows=734959 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1904412.55 rows=801406 width=34) (actual time=31.505..23178.592 rows=1521941 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.038..0.560 rows=56 loops=1)
Q20,1.6,Sort  (cost=10616109.29..10616111.96 rows=1069 width=51) (actual time=8315.725..8315.823 rows=1796 loops=1)
Q20,1.6,->  Hash Semi Join  (cost=10613718.13..10616055.51 rows=1069 width=51) (actual time=8284.292..8313.584 rows=1796 loops=1)
Q1,1.5,Sort  (cost=4216934.95..4216934.97 rows=6 width=20) (actual time=89338.254..89338.254 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4216934.77..4216934.88 rows=6 width=20) (actual time=89338.208..89338.211 rows=4 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5990.73 rows=597873 width=0) (actual time=4.189..4.189 rows=405760 loops=1)
Q10,1.4,->  HashAggregate  (cost=2269710.60..2275344.31 rows=563371 width=175) (actual time=31376.171..31630.017 rows=379038 loops=1)
Q9,1.3,GroupAggregate  (cost=1169819.36..1169823.95 rows=131 width=46) (actual time=87990.571..90641.080 rows=175 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2877.03 rows=140203 width=0) (actual time=783.192..783.192 rows=191054 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2912.08..41870.41 rows=140203 width=24) (actual time=791.527..1242.477 rows=191054 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91652.50 rows=9150450 width=0) (actual time=119.245..119.245 rows=10708480 loops=1)
Q20,1.1,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..672.56 rows=18001 width=0) (actual time=8.788..8.788 rows=21593 loops=1)
Q15,1.1,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.021..22.650 rows=83967 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=108105 width=4) (actual time=0.014..678.231 rows=108843 loops=1)
Q9,1.0,->  Hash Join  (cost=66873.31..352155.51 rows=432420 width=16) (actual time=709.425..4422.195 rows=435372 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=108105 width=4) (actual time=708.912..708.912 rows=108843 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.734..1878.294 rows=300963 loops=1)
Q8,1.0,->  Nested Loop  (cost=412.35..1677414.09 rows=122183 width=20) (actual time=7.166..8218.547 rows=120355 loops=1)
Q8,1.0,->  Nested Loop  (cost=411.91..1480827.00 rows=401482 width=16) (actual time=7.124..4127.453 rows=395418 loops=1)
Q8,1.0,->  Nested Loop  (cost=38742.79..1724331.69 rows=24437 width=16) (actual time=1979.378..10406.743 rows=24214 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..109.09 rows=31 width=20) (actual time=0.026..0.294 rows=30 loops=13210)
Q8,1.0,->  Hash Join  (cost=38744.35..1724791.45 rows=24437 width=38) (actual time=1979.422..10445.103 rows=24214 loops=1)
Q8,1.0,->  Hash Join  (cost=38742.50..1716446.79 rows=24437 width=16) (actual time=1979.362..10260.174 rows=24214 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=1969.492..1969.492 rows=300963 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..408.03 rows=13280 width=0) (actual time=4.796..4.796 rows=13210 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=411.35..28055.26 rows=13280 width=4) (actual time=7.073..128.786 rows=13210 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.635..366.285 rows=60193 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=8) (actual time=0.007..3314.908 rows=15000000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2118436.65 rows=1466551 width=42) (actual time=593.537..22981.390 rows=1462952 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2130323.25 rows=61032 width=64) (actual time=634.268..23662.664 rows=57919 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..534366.29 rows=1210798 width=30) (actual time=593.496..9385.533 rows=1205488 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.041..554.094 rows=120446 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.037..38.315 rows=7961 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=592.988..592.988 rows=120446 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=40.470..40.470 rows=7961 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91851.58..1368473.70 rows=796310 width=8) (actual time=120.162..23221.586 rows=795051 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.680..2478.750 rows=300963 loops=1)
Q5,1.0,->  Nested Loop  (cost=100268.23..1940236.95 rows=1834556 width=46) (actual time=2634.114..18357.811 rows=1822382 loops=1)
Q5,1.0,->  Hash Join  (cost=104947.23..1959408.94 rows=73382 width=34) (actual time=2694.243..19253.849 rows=72634 loops=1)
Q5,1.0,->  Hash Join  (cost=100267.66..489603.94 rows=458751 width=38) (actual time=2634.091..8547.073 rows=455662 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2604.753..2604.753 rows=300963 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=61926.03..438073.21 rows=2293757 width=8) (actual time=27.384..4919.973 rows=2275583 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.638..484.845 rows=60193 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5957.86..269152.14 rows=577352 width=20) (actual time=27.887..5873.597 rows=573830 loops=1)
Q3,1.0,->  Hash Join  (cost=106803.79..496684.16 rows=1470344 width=12) (actual time=421.935..7871.334 rows=1461865 loops=1)
Q3,1.0,->  Hash  (cost=496684.16..496684.16 rows=1470344 width=12) (actual time=8367.722..8367.722 rows=1461865 loops=1)
Q3,1.0,->  Hash  (cost=45965.12..45965.12 rows=299590 width=4) (actual time=392.025..392.025 rows=300276 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6867.35 rows=299590 width=0) (actual time=65.065..65.065 rows=300276 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=57093.79..404664.04 rows=7361780 width=16) (actual time=27.637..4718.322 rows=7289921 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=252620.73..1734807.82 rows=32577127 width=12) (actual time=120.130..20239.999 rows=32331479 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6942.25..45965.12 rows=299590 width=4) (actual time=73.753..308.110 rows=300276 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=4) (actual time=0.014..4141.363 rows=15000000 loops=1)
Q22,1.0,->  Hash  (cost=406897.75..406897.75 rows=15134975 width=4) (actual time=8060.661..8060.661 rows=15000000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=598997.02..642542.74 rows=59196 width=20) (actual time=8897.559..9467.090 rows=63315 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6553.29 rows=382173 width=0) (actual time=83.783..83.783 rows=382200 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6648.84..51958.88 rows=382173 width=4) (actual time=92.541..656.047 rows=382200 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.317..30.348 rows=4007 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=31.453..31.453 rows=4007 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.306..29.630 rows=4007 loops=1)
Q2,1.0,->  Sort  (cost=465633.45..469632.33 rows=1599552 width=168) (actual time=6425.799..6557.444 rows=1602228 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.308..147.719 rows=20037 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8063 width=30) (actual time=0.058..1135.919 rows=7967 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300805.72 rows=1599552 width=168) (actual time=159.056..5263.923 rows=1602960 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=158.919..158.919 rows=20037 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.256..28.690 rows=4007 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.291..28.217 rows=3933 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.274..27.620 rows=3933 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=677.57..33179.78 rows=20019 width=4) (actual time=12.406..304.028 rows=21593 loops=1)
Q19,1.0,->  Nested Loop  (cost=12892.56..612392.15 rows=1140 width=8) (actual time=34.297..1849.822 rows=1133 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4003.20 rows=399120 width=0) (actual time=4.171..4.171 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.35 rows=8063 width=0) (actual time=3.676..3.676 rows=7975 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.63 rows=7992 width=0) (actual time=3.707..3.707 rows=8004 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.15 rows=7944 width=0) (actual time=3.531..3.531 rows=8154 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.74 rows=31 width=0) (actual time=0.026..0.026 rows=30 loops=4938)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12887.82..26622.09 rows=4774 width=30) (actual time=33.079..277.716 rows=4938 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=16) (actual time=0.007..3206.454 rows=15000000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1680210.96 rows=60523796 width=8) (actual time=0.004..7321.763 rows=59983922 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1680210.96 rows=60523796 width=8) (actual time=0.012..8732.662 rows=59983922 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.025..0.039 rows=30 loops=1994)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.025..0.039 rows=30 loops=1994)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.20 rows=1977 width=0) (actual time=0.912..0.912 rows=1994 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=72.69..6558.74 rows=1977 width=4) (actual time=1.258..34.914 rows=1994 loops=1)
Q16,1.0,Sort  (cost=413709.95..413779.83 rows=27951 width=40) (actual time=10843.342..10846.344 rows=27839 loops=1)
Q16,1.0,->  Hash  (cost=51049.92..51049.92 rows=298136 width=40) (actual time=1277.792..1277.792 rows=298155 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403912.78..411645.69 rows=27951 width=40) (actual time=10046.928..10783.542 rows=27839 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2496.09..51049.92 rows=298136 width=40) (actual time=34.951..1153.494 rows=298155 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=257497.21..1839663.03 rows=2275205 width=12) (actual time=118.836..21408.738 rows=2249417 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=257497.21..1839663.03 rows=2275205 width=12) (actual time=120.609..19097.759 rows=2249417 loops=1)
Q14,1.0,->  Hash Join  (cost=93515.54..1142945.37 rows=765418 width=29) (actual time=1308.006..20890.662 rows=774596 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=7993.54..1045942.10 rows=765418 width=12) (actual time=119.342..19025.678 rows=774596 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..444735.19 rows=14968962 width=8) (actual time=0.020..7039.903 rows=14838053 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..738297.62 rows=14968962 width=8) (actual time=820.066..17570.908 rows=15338072 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..404880.36 rows=15059936 width=20) (actual time=0.010..3978.820 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2424723.91 rows=289709 width=15) (actual time=0.050..22891.681 rows=311519 loops=1)
Q12,1.0,->  Hash Join  (cost=593129.56..3026906.88 rows=289709 width=27) (actual time=8348.886..31514.050 rows=311519 loops=1)
Q12,1.0,->  Hash  (cost=404880.36..404880.36 rows=15059936 width=20) (actual time=8303.435..8303.435 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.298..39.540 rows=3933 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.291..25.464 rows=3933 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286562.41 rows=319910 width=8) (actual time=26.417..3914.394 rows=314640 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286562.41 rows=319910 width=12) (actual time=40.637..4436.705 rows=314640 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=40.579..40.579 rows=3933 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=26.344..26.344 rows=3933 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.268..24.820 rows=3933 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.281..38.896 rows=3933 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1831520.45 rows=59635358 width=20) (actual time=0.012..18538.363 rows=59083940 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1831520.45 rows=14978025 width=12) (actual time=0.013..17325.432 rows=14822845 loops=1)
Q10,1.0,->  Hash  (cost=269962.17..269962.17 rows=569274 width=8) (actual time=6047.157..6047.157 rows=568635 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5875.06..269962.17 rows=569274 width=8) (actual time=27.658..5836.154 rows=568635 loops=1)
