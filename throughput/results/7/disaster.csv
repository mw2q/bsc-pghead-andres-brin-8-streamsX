Q21,715966.0,->  Nested Loop Semi Join  (cost=2406.31..2850975.59 rows=1 width=34) (actual time=35.510..38594.779 rows=715966 loops=1)
Q3,315086.3,->  Sort  (cost=2555849.75..2563726.91 rows=3150863 width=20) (actual time=36891.590..36891.591 rows=10 loops=1)
Q18,303258.7,->  GroupAggregate  (cost=10155039.93..10980661.76 rows=30022612 width=39) (actual time=67951.138..67951.464 rows=99 loops=1)
Q18,75833.2,->  Hash Join  (cost=2180097.47..2793807.34 rows=7507492 width=39) (actual time=42677.021..48318.809 rows=99 loops=1)
Q18,75833.2,->  Hash Join  (cost=2111069.47..2612166.96 rows=7507492 width=20) (actual time=41427.427..47068.842 rows=99 loops=1)
Q18,75833.2,->  Hash  (cost=2793807.34..2793807.34 rows=7507492 width=39) (actual time=48319.107..48319.107 rows=99 loops=1)
Q18,43322.6,->  Sort  (cost=10155039.93..10230096.46 rows=30022612 width=39) (actual time=67951.125..67951.177 rows=693 loops=1)
Q18,43322.6,->  Hash Join  (cost=2887650.99..5605367.65 rows=30022612 width=39) (actual time=48702.469..67950.019 rows=693 loops=1)
Q18,41534.8,->  Hash  (cost=2059670.15..2059670.15 rows=4111946 width=4) (actual time=41297.305..41297.305 rows=99 loops=1)
Q18,41534.8,->  HashAggregate  (cost=1967151.36..2018550.69 rows=4111946 width=8) (actual time=35809.155..41297.041 rows=99 loops=1)
Q21,40136.0,->  Nested Loop Anti Join  (cost=2406.88..2850977.38 rows=1 width=26) (actual time=36.054..41389.084 rows=40136 loops=1)
Q9,31462.4,->  Sort  (cost=1002279.63..1002279.89 rows=104 width=46) (actual time=91945.273..92520.193 rows=3272098 loops=1)
Q9,31462.4,->  Nested Loop  (cost=66599.33..1002272.63 rows=104 width=24) (actual time=971.354..82780.396 rows=3272098 loops=1)
Q9,31462.4,->  Nested Loop  (cost=66598.90..1002222.23 rows=104 width=24) (actual time=971.337..52441.485 rows=3272098 loops=1)
Q9,31462.4,->  Nested Loop  (cost=66598.60..1002188.67 rows=104 width=28) (actual time=971.328..42196.982 rows=3272098 loops=1)
Q9,31462.4,->  Hash Join  (cost=66600.89..1002276.15 rows=104 width=46) (actual time=971.405..85988.021 rows=3272098 loops=1)
Q10,28664.9,->  Sort  (cost=2291710.35..2293143.60 rows=573298 width=175) (actual time=31764.178..31764.181 rows=20 loops=1)
Q2,4758.0,->  Merge Join  (cost=465633.87..887009.00 rows=1 width=190) (actual time=6337.666..8252.107 rows=4758 loops=1)
Q21,4054.0,->  HashAggregate  (cost=2850977.38..2850977.39 rows=1 width=26) (actual time=41444.274..41445.642 rows=4054 loops=1)
Q15,3768.0,->  Subquery Scan on revenue7  (cost=2022807.69..2022892.47 rows=3768 width=12) (actual time=41023.627..41052.526 rows=1 loops=1)
Q15,3768.0,->  Sort  (cost=2023116.28..2023125.70 rows=3768 width=12) (actual time=41052.549..41052.551 rows=1 loops=1)
Q15,3768.0,Merge Join  (cost=4028875.74..4033973.46 rows=3768 width=79) (actual time=41074.238..41074.241 rows=1 loops=1)
Q15,3768.0,->  HashAggregate  (cost=2022807.69..2022854.79 rows=3768 width=12) (actual time=41023.626..41052.523 rows=1 loops=1)
Q7,765.0,Sort  (cost=2131461.80..2131469.45 rows=3060 width=64) (actual time=22937.943..22937.943 rows=4 loops=1)
Q7,765.0,->  HashAggregate  (cost=2131238.73..2131284.63 rows=3060 width=64) (actual time=22937.876..22937.881 rows=4 loops=1)
Q8,366.5,Sort  (cost=1680828.86..1680830.69 rows=733 width=38) (actual time=11633.735..11633.735 rows=2 loops=1)
Q8,366.5,->  HashAggregate  (cost=1680781.15..1680793.98 rows=733 width=38) (actual time=11633.697..11633.697 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2850977.40..2850977.41 rows=1 width=26) (actual time=41446.798..41446.804 rows=100 loops=1)
Q21,100.0,Limit  (cost=2850977.40..2850977.41 rows=1 width=26) (actual time=41446.799..41446.816 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=887009.01..887009.02 rows=1 width=190) (actual time=8256.894..8256.904 rows=100 loops=1)
Q2,100.0,Limit  (cost=887009.01..887009.02 rows=1 width=190) (actual time=8256.896..8256.915 rows=100 loops=1)
Q11,34.1,Sort  (cost=614372.93..615172.70 rows=319910 width=12) (actual time=8384.697..8385.785 rows=9363 loops=1)
Q11,34.1,->  HashAggregate  (cost=292160.84..296159.71 rows=319910 width=12) (actual time=8290.456..8379.466 rows=9363 loops=1)
Q3,27.8,->  HashAggregate  (cost=2456252.10..2487760.73 rows=3150863 width=20) (actual time=36820.146..36870.486 rows=112988 loops=1)
Q15,26.5,->  HashAggregate  (cost=2005674.37..2005712.05 rows=3768 width=12) (actual time=20114.043..20152.454 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.005..0.005 rows=1 loops=743240)
Q14,13.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7963.07 rows=781507 width=0) (actual time=120.534..120.534 rows=10750720 loops=1)
Q3,10.5,->  Hash Join  (cost=767782.48..2408989.16 rows=3150863 width=20) (actual time=8754.935..36527.030 rows=298019 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2418.01 rows=320800 width=0) (actual time=34.800..34.800 rows=3246080 loops=1)
Q9,7.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.016..0.083 rows=7 loops=436604)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.642..3.642 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.607..3.607 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.237..0.237 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.263..0.263 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.262..0.262 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.272..0.272 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.241..0.241 rows=23040 loops=1)
Q5,5.0,Sort  (cost=1921996.85..1921996.91 rows=25 width=34) (actual time=16340.609..16340.610 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1921996.02..1921996.27 rows=25 width=34) (actual time=16340.567..16340.568 rows=5 loops=1)
Q4,5.0,Sort  (cost=1489102.35..1489102.36 rows=1 width=16) (actual time=15762.880..15762.880 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.09 rows=5 width=4) (actual time=0.014..0.014 rows=1 loops=573447)
Q4,5.0,->  HashAggregate  (cost=1489102.33..1489102.34 rows=1 width=16) (actual time=15762.832..15762.833 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.003..0.003 rows=1 loops=715966)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5779.38 rows=573938 width=0) (actual time=27.498..27.498 rows=2543360 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5833.05 rows=579305 width=0) (actual time=27.522..27.522 rows=2556160 loops=1)
Q13,4.3,Sort  (cost=848846.33..848846.83 rows=200 width=8) (actual time=26737.770..26737.773 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=848836.69..848838.69 rows=200 width=8) (actual time=26737.700..26737.706 rows=46 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.009..0.010 rows=1 loops=1200412)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.02 rows=15 width=16) (actual time=0.010..0.012 rows=4 loops=455908)
Q17,3.7,->  Nested Loop  (cost=83.41..117954.88 rows=20798 width=4) (actual time=1.627..209.145 rows=5500 loops=1)
Q4,3.3,->  Nested Loop Semi Join  (cost=5923.43..1488318.80 rows=156707 width=16) (actual time=27.702..15442.114 rows=526226 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.58 rows=10 width=12) (actual time=0.015..0.039 rows=3 loops=1987)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..246944.18 rows=32906157 width=0) (actual time=119.584..119.584 rows=10750720 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.30 rows=1 width=8) (actual time=0.301..0.373 rows=3 loops=22026)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..54651.47 rows=7281530 width=0) (actual time=27.488..27.488 rows=2556160 loops=1)
Q5,2.3,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..44501.91 rows=5928255 width=0) (actual time=27.498..27.498 rows=2556160 loops=1)
Q22,2.3,Sort  (cost=693413.27..693413.28 rows=3 width=20) (actual time=9506.621..9506.621 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=640569.85..640569.89 rows=3 width=20) (actual time=9506.576..9506.577 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.037..0.053 rows=2 loops=6402)
Q20,2.0,->  Nested Loop  (cost=754.48..11668697.83 rows=29387 width=4) (actual time=13.205..8526.542 rows=59768 loops=1)
Q20,2.0,->  Hash  (cost=11668697.83..11668697.83 rows=29387 width=4) (actual time=8563.101..8563.101 rows=59768 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2016.33 rows=200433 width=0) (actual time=4.210..4.210 rows=405760 loops=1)
Q12,2.0,Sort  (cost=3047192.25..3047192.25 rows=1 width=27) (actual time=34322.461..34322.462 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3047192.23..3047192.24 rows=1 width=27) (actual time=34322.408..34322.409 rows=2 loops=1)
Q21,1.9,->  Nested Loop  (cost=2405.75..2328599.52 rows=390965 width=38) (actual time=35.476..34201.486 rows=743240 loops=1)
Q21,1.9,->  Hash Join  (cost=2405.31..1906304.68 rows=802203 width=34) (actual time=35.390..24967.784 rows=1536688 loops=1)
Q16,1.9,->  Sort  (cost=403784.82..405273.15 rows=595330 width=40) (actual time=9543.358..9682.139 rows=1186213 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.502..3679.326 rows=7995520 loops=1)
Q16,1.9,->  Hash Join  (cost=54771.46..346682.76 rows=595330 width=40) (actual time=962.885..6152.285 rows=1186213 loops=1)
Q10,1.9,->  Hash Join  (cost=346486.33..2256389.67 rows=573298 width=175) (actual time=7112.536..29427.019 rows=1145847 loops=1)
Q10,1.9,->  Hash Join  (cost=346484.77..2248505.26 rows=573298 width=153) (actual time=7112.507..29009.740 rows=1145847 loops=1)
Q10,1.9,->  Hash Join  (cost=277456.77..2170877.79 rows=573298 width=12) (actual time=5539.195..26582.853 rows=1145847 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1820670.76 rows=20055087 width=8) (actual time=0.015..18495.769 rows=37928885 loops=1)
Q15,1.8,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.034..16.468 rows=53897 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.035..0.460 rows=56 loops=1)
Q9,1.6,GroupAggregate  (cost=1002279.63..1002283.27 rows=104 width=46) (actual time=91954.948..94718.893 rows=175 loops=1)
Q20,1.5,Sort  (cost=11671508.37..11671511.31 rows=1175 width=51) (actual time=8605.026..8605.126 rows=1769 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=11669108.17..11671448.46 rows=1175 width=51) (actual time=8563.538..8603.271 rows=1769 loops=1)
Q1,1.5,Sort  (cost=4179079.37..4179079.38 rows=6 width=20) (actual time=88981.768..88981.768 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4179079.19..4179079.29 rows=6 width=20) (actual time=88981.721..88981.722 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=2270722.12..2276455.10 rows=573298 width=175) (actual time=31418.080..31623.625 rows=381185 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5990.73 rows=597873 width=0) (actual time=4.172..4.172 rows=405760 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2869.89 rows=139490 width=0) (actual time=456.574..456.574 rows=191012 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2904.77..41844.38 rows=139490 width=24) (actual time=465.116..883.426 rows=191012 loops=1)
Q9,1.2,->  Seq Scan on part  (cost=0.00..65522.00 rows=86083 width=4) (actual time=0.016..929.916 rows=109151 loops=1)
Q9,1.2,->  Hash Join  (cost=66598.04..350999.36 rows=344332 width=16) (actual time=971.220..5043.477 rows=436604 loops=1)
Q9,1.2,->  Hash  (cost=65522.00..65522.00 rows=86083 width=4) (actual time=970.687..970.687 rows=109151 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91797.85 rows=9164985 width=0) (actual time=119.671..119.671 rows=10750720 loops=1)
Q20,1.1,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.54 rows=19999 width=0) (actual time=8.968..8.968 rows=22026 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.919..2262.130 rows=299436 loops=1)
Q8,1.0,->  Nested Loop  (cost=401.35..1633238.85 rows=118036 width=20) (actual time=7.177..8952.107 rows=121292 loops=1)
Q8,1.0,->  Nested Loop  (cost=400.91..1443329.67 rows=387855 width=16) (actual time=6.920..3327.203 rows=398991 loops=1)
Q8,1.0,->  Nested Loop  (cost=38731.79..1679864.82 rows=23607 width=16) (actual time=2366.951..11552.739 rows=24394 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..109.50 rows=31 width=20) (actual time=0.023..0.229 rows=30 loops=13278)
Q8,1.0,->  Hash Join  (cost=38733.35..1680309.01 rows=23607 width=38) (actual time=2367.001..11592.516 rows=24394 loops=1)
Q8,1.0,->  Hash Join  (cost=38731.50..1672247.70 rows=23607 width=16) (actual time=2366.929..11381.058 rows=24394 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2355.845..2355.845 rows=299436 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..397.12 rows=12893 width=0) (actual time=4.591..4.591 rows=13278 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=400.35..27572.44 rows=12893 width=4) (actual time=6.874..160.197 rows=13278 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.686..442.188 rows=59887 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=8) (actual time=0.006..3128.992 rows=15000000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2118436.65 rows=1466551 width=42) (actual time=721.787..22113.626 rows=1463240 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2130323.25 rows=61032 width=64) (actual time=765.245..22842.635 rows=59041 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..534366.29 rows=1210798 width=30) (actual time=721.652..9882.911 rows=1200412 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.047..678.765 rows=120054 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.036..40.672 rows=8033 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=721.098..721.098 rows=120054 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=42.881..42.881 rows=8033 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91997.24..1373182.40 rows=797575 width=8) (actual time=120.443..23509.922 rows=794987 loops=1)
Q5,1.0,->  Nested Loop  (cost=83419.48..1902039.41 rows=1840676 width=46) (actual time=2429.530..15397.058 rows=1822742 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.740..2280.624 rows=299436 loops=1)
Q5,1.0,->  Hash Join  (cost=88098.48..1921259.75 rows=73627 width=34) (actual time=2485.183..16250.189 rows=73258 loops=1)
Q5,1.0,->  Hash Join  (cost=83418.91..441124.11 rows=460291 width=38) (actual time=2429.508..9369.105 rows=455908 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2399.582..2399.582 rows=299436 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=45077.28..389549.10 rows=2301457 width=8) (actual time=27.662..5922.020 rows=2281767 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.642..445.432 rows=59887 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5922.86..268812.93 rows=573938 width=20) (actual time=27.672..6697.916 rows=573447 loops=1)
Q3,1.0,->  Hash Join  (cost=106131.47..494496.52 rows=1449219 width=12) (actual time=433.311..8136.295 rows=1438040 loops=1)
Q3,1.0,->  Hash  (cost=494496.52..494496.52 rows=1449219 width=12) (actual time=8625.474..8625.474 rows=1438040 loops=1)
Q3,1.0,->  Hash  (cost=45927.86..45927.86 rows=298540 width=4) (actual time=403.349..403.349 rows=299751 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6843.48 rows=298540 width=0) (actual time=65.665..65.665 rows=299751 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=56471.85..403038.98 rows=7281530 width=16) (actual time=27.649..4994.700 rows=7208477 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=255170.72..1741470.68 rows=32906157 width=12) (actual time=120.338..22355.520 rows=32656291 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6918.11..45927.86 rows=298540 width=4) (actual time=74.395..319.673 rows=299751 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=4) (actual time=0.013..4053.882 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=405283.20..405283.20 rows=15074920 width=4) (actual time=8411.493..8411.493 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=596624.47..640128.13 rows=58895 width=20) (actual time=8936.035..9479.132 rows=64024 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6538.70 rows=380229 width=0) (actual time=81.887..81.887 rows=382133 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6633.76..51892.77 rows=380229 width=4) (actual time=90.257..330.286 rows=382133 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.292..34.247 rows=4054 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=35.338..35.338 rows=4054 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.280..33.578 rows=4054 loops=1)
Q2,1.0,->  Sort  (cost=465633.45..469632.33 rows=1599552 width=168) (actual time=6336.875..6462.853 rows=1586907 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.299..146.177 rows=19837 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=7957 width=30) (actual time=0.396..1120.340 rows=7996 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300805.72 rows=1599552 width=168) (actual time=157.233..5213.988 rows=1586960 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=157.101..157.101 rows=19837 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.249..28.382 rows=3967 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.295..38.250 rows=4049 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.279..37.463 rows=4049 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.05..34890.33 rows=22021 width=4) (actual time=12.622..278.566 rows=22026 loops=1)
Q19,1.0,->  Nested Loop  (cost=12894.77..620644.77 rows=1165 width=8) (actual time=32.611..2107.307 rows=1099 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4003.20 rows=399120 width=0) (actual time=4.177..4.177 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..291.39 rows=8168 width=0) (actual time=3.459..3.459 rows=8038 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.19 rows=8047 width=0) (actual time=3.562..3.562 rows=7904 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.67 rows=7996 width=0) (actual time=3.649..3.649 rows=8112 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.74 rows=31 width=0) (actual time=0.025..0.025 rows=30 loops=4772)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12890.03..26774.24 rows=4840 width=30) (actual time=32.204..288.320 rows=4772 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=16) (actual time=0.006..2255.013 rows=15000000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1666925.24 rows=60045224 width=8) (actual time=0.005..7099.252 rows=59985329 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1666925.24 rows=60045224 width=8) (actual time=0.003..9779.530 rows=59985329 loops=1)
Q18,1.0,Limit  (cost=10155039.93..10155042.68 rows=100 width=39) (actual time=67951.140..67951.485 rows=99 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.023..0.041 rows=30 loops=1987)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.023..0.041 rows=30 loops=1987)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..73.13 rows=2070 width=0) (actual time=0.890..0.890 rows=1987 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=73.64..6828.68 rows=2070 width=4) (actual time=1.249..33.452 rows=1987 loops=1)
Q16,1.0,Sort  (cost=413566.22..413635.99 rows=27907 width=40) (actual time=10335.263..10337.911 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=51034.42..51034.42 rows=297665 width=40) (actual time=960.380..960.380 rows=296712 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403784.82..411505.52 rows=27907 width=40) (actual time=9543.417..10275.984 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2492.42..51034.42 rows=297665 width=40) (actual time=34.875..850.663 rows=296712 loops=1)
Q15,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1982829.94 rows=2284443 width=12) (actual time=0.018..18213.624 rows=2247562 loops=1)
Q15,1.0,->  Seq Scan on lineitem  (cost=0.00..1982829.94 rows=2284443 width=12) (actual time=0.022..18980.310 rows=2247562 loops=1)
Q14,1.0,->  Hash Join  (cost=93680.45..1154211.22 rows=781507 width=29) (actual time=1517.473..24655.241 rows=774783 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8158.45..1056966.62 rows=781507 width=12) (actual time=121.339..22536.427 rows=774783 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..444735.19 rows=14878675 width=8) (actual time=0.016..7796.670 rows=14837857 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..736943.31 rows=14878675 width=8) (actual time=782.822..17283.895 rows=15337878 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=20) (actual time=0.011..4955.635 rows=15000000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2436758.41 rows=294336 width=15) (actual time=0.063..23982.995 rows=312344 loops=1)
Q12,1.0,->  Hash Join  (cost=596084.94..3042041.35 rows=294336 width=27) (actual time=9662.277..33990.572 rows=312344 loops=1)
Q12,1.0,->  Hash  (cost=406897.75..406897.75 rows=15134975 width=20) (actual time=9616.779..9616.779 rows=15000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.310..39.250 rows=3995 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.286..25.758 rows=3995 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286562.41 rows=319910 width=8) (actual time=26.759..3977.596 rows=319600 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286562.41 rows=319910 width=12) (actual time=40.377..3976.646 rows=319600 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=40.271..40.271 rows=3995 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=26.671..26.671 rows=3995 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.259..25.080 rows=3995 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.292..38.575 rows=3995 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1824303.23 rows=58869399 width=20) (actual time=0.015..18730.780 rows=58622315 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1831520.45 rows=14978025 width=12) (actual time=0.028..17555.067 rows=14807964 loops=1)
Q10,1.0,->  Hash  (cost=270215.45..270215.45 rows=579305 width=8) (actual time=5535.840..5535.840 rows=573320 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5977.88..270215.45 rows=579305 width=8) (actual time=27.696..5344.810 rows=573320 loops=1)
