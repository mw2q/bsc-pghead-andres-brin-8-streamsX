Q21,708974.0,->  Nested Loop Semi Join  (cost=2406.31..2868053.98 rows=1 width=34) (actual time=36.351..35323.498 rows=708974 loops=1)
Q3,314448.8,->  Sort  (cost=2533395.14..2541256.36 rows=3144488 width=20) (actual time=39221.361..39221.361 rows=10 loops=1)
Q18,302618.9,->  GroupAggregate  (cost=10235701.75..11067903.95 rows=30261898 width=39) (actual time=68782.272..68782.602 rows=100 loops=1)
Q18,67566.8,->  Hash Join  (cost=2195776.05..2814061.74 rows=7567488 width=39) (actual time=43611.744..49800.349 rows=112 loops=1)
Q18,67566.8,->  Hash Join  (cost=2126748.05..2631521.42 rows=7567488 width=20) (actual time=42734.360..48922.571 rows=112 loops=1)
Q18,67566.8,->  Hash  (cost=2814061.74..2814061.74 rows=7567488 width=39) (actual time=49800.624..49800.624 rows=112 loops=1)
Q18,43169.6,->  Sort  (cost=10235701.75..10311356.50 rows=30261898 width=39) (actual time=68782.260..68782.295 rows=701 loops=1)
Q21,39941.0,->  Nested Loop Anti Join  (cost=2406.88..2868055.76 rows=1 width=26) (actual time=37.511..38096.648 rows=39941 loops=1)
Q18,38599.3,->  Hash Join  (cost=2908655.34..5648032.75 rows=30261898 width=39) (actual time=49936.263..68781.084 rows=784 loops=1)
Q18,36713.8,->  Hash  (cost=2075348.72..2075348.72 rows=4111946 width=4) (actual time=42613.721..42613.721 rows=112 loops=1)
Q18,36713.8,->  HashAggregate  (cost=1982829.94..2034229.26 rows=4111946 width=8) (actual time=37277.834..42613.417 rows=112 loops=1)
Q9,30794.6,->  Sort  (cost=1017443.37..1017443.63 rows=106 width=46) (actual time=89538.073..90056.968 rows=3264232 loops=1)
Q9,30794.6,->  Nested Loop  (cost=66624.52..1017436.25 rows=106 width=24) (actual time=975.164..80703.658 rows=3264232 loops=1)
Q9,30794.6,->  Nested Loop  (cost=66624.08..1017384.88 rows=106 width=24) (actual time=975.142..49951.149 rows=3264232 loops=1)
Q9,30794.6,->  Nested Loop  (cost=66623.79..1017350.67 rows=106 width=28) (actual time=975.132..39703.754 rows=3264232 loops=1)
Q9,30794.6,->  Hash Join  (cost=66626.08..1017439.80 rows=106 width=46) (actual time=975.227..83893.168 rows=3264232 loops=1)
Q10,28068.9,->  Sort  (cost=2273106.67..2274510.11 rows=561378 width=175) (actual time=34525.222..34525.225 rows=20 loops=1)
Q2,4711.0,->  Merge Join  (cost=465633.87..892431.75 rows=1 width=190) (actual time=6497.965..8530.574 rows=4711 loops=1)
Q21,4023.0,->  HashAggregate  (cost=2868055.76..2868055.77 rows=1 width=26) (actual time=38152.308..38153.539 rows=4023 loops=1)
Q15,3766.0,->  Subquery Scan on revenue6  (cost=1828182.30..1828267.03 rows=3766 width=12) (actual time=50070.847..50075.903 rows=1 loops=1)
Q15,3766.0,->  Sort  (cost=1828490.71..1828500.13 rows=3766 width=12) (actual time=50075.921..50075.922 rows=1 loops=1)
Q15,3766.0,Merge Join  (cost=3639738.25..3644835.94 rows=3766 width=79) (actual time=50102.159..50102.162 rows=1 loops=1)
Q15,3766.0,->  HashAggregate  (cost=1828182.30..1828229.37 rows=3766 width=12) (actual time=50070.846..50075.902 rows=1 loops=1)
Q7,765.0,Sort  (cost=2129371.55..2129379.20 rows=3060 width=64) (actual time=23217.953..23217.953 rows=4 loops=1)
Q7,765.0,->  HashAggregate  (cost=2129148.49..2129194.39 rows=3060 width=64) (actual time=23217.891..23217.893 rows=4 loops=1)
Q8,366.5,Sort  (cost=1729895.54..1729897.38 rows=733 width=38) (actual time=13428.248..13428.248 rows=2 loops=1)
Q8,366.5,->  HashAggregate  (cost=1729847.83..1729860.66 rows=733 width=38) (actual time=13428.211..13428.211 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2868055.78..2868055.79 rows=1 width=26) (actual time=38154.703..38154.710 rows=100 loops=1)
Q21,100.0,Limit  (cost=2868055.78..2868055.79 rows=1 width=26) (actual time=38154.704..38154.721 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=892431.76..892431.77 rows=1 width=190) (actual time=8535.299..8535.311 rows=100 loops=1)
Q2,100.0,Limit  (cost=892431.76..892431.77 rows=1 width=190) (actual time=8535.301..8535.321 rows=100 loops=1)
Q11,35.7,Sort  (cost=614372.93..615172.70 rows=319910 width=12) (actual time=8079.486..8080.530 rows=8951 loops=1)
Q11,35.7,->  HashAggregate  (cost=292160.84..296159.71 rows=319910 width=12) (actual time=7998.361..8074.466 rows=8951 loops=1)
Q3,27.5,->  HashAggregate  (cost=2433999.00..2465443.88 rows=3144488 width=20) (actual time=39148.014..39199.862 rows=114119 loops=1)
Q15,26.5,->  HashAggregate  (cost=1811162.50..1811200.16 rows=3766 width=12) (actual time=26411.149..26438.982 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.005..0.005 rows=1 loops=735643)
Q14,13.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7847.79 rows=769979 width=0) (actual time=119.919..119.919 rows=10750720 loops=1)
Q3,10.3,->  Hash Join  (cost=762761.66..2386831.68 rows=3144488 width=20) (actual time=8067.269..38845.094 rows=302377 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2415.71 rows=320493 width=0) (actual time=35.044..35.044 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.015..0.078 rows=8 loops=434948)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=4.056..4.056 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.602..3.602 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.241..0.241 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.261..0.261 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.239..0.239 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.254..0.254 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.250..0.250 rows=23040 loops=1)
Q5,5.0,Sort  (cost=1921996.85..1921996.91 rows=25 width=34) (actual time=14292.399..14292.399 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1921996.02..1921996.27 rows=25 width=34) (actual time=14292.354..14292.355 rows=5 loops=1)
Q4,5.0,Sort  (cost=1502110.44..1502110.45 rows=1 width=16) (actual time=14328.408..14328.408 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.04 rows=5 width=4) (actual time=0.012..0.012 rows=1 loops=574158)
Q4,5.0,->  HashAggregate  (cost=1502110.42..1502110.43 rows=1 width=16) (actual time=14328.359..14328.359 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.003..0.003 rows=1 loops=708974)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5712.49 rows=567249 width=0) (actual time=27.424..27.424 rows=2535680 loops=1)
Q4,4.3,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5881.39 rows=584139 width=0) (actual time=27.703..27.703 rows=2553600 loops=1)
Q13,4.3,Sort  (cost=845165.98..845166.48 rows=200 width=8) (actual time=28802.628..28802.631 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=845156.34..845158.34 rows=200 width=8) (actual time=28802.521..28802.533 rows=46 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.010..0.011 rows=1 loops=1203781)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.02 rows=15 width=16) (actual time=0.010..0.012 rows=4 loops=456122)
Q17,3.6,->  Nested Loop  (cost=83.01..115765.38 rows=20487 width=4) (actual time=1.602..203.069 rows=5604 loops=1)
Q4,3.3,->  Nested Loop Semi Join  (cost=6027.99..1501316.13 rows=158859 width=16) (actual time=27.904..14019.644 rows=526383 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.59 rows=10 width=12) (actual time=0.014..0.033 rows=3 loops=2103)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..242493.60 rows=32312747 width=0) (actual time=118.752..118.752 rows=10676480 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.50 rows=1 width=8) (actual time=0.300..0.369 rows=3 loops=21692)
Q15,2.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..239864.37 rows=31962183 width=0) (actual time=120.533..120.533 rows=10693120 loops=1)
Q15,2.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..239864.37 rows=31962183 width=0) (actual time=119.381..119.381 rows=10686720 loops=1)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..54963.67 rows=7323155 width=0) (actual time=27.196..27.196 rows=2538240 loops=1)
Q5,2.3,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..44501.91 rows=5928255 width=0) (actual time=27.438..27.438 rows=2556160 loops=1)
Q22,2.3,Sort  (cost=695824.60..695824.61 rows=3 width=20) (actual time=8856.458..8856.458 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=642954.47..642954.51 rows=3 width=20) (actual time=8856.415..8856.415 rows=7 loops=1)
Q20,2.2,->  Nested Loop  (cost=678.03..10613343.83 rows=26715 width=4) (actual time=13.173..8325.703 rows=58838 loops=1)
Q20,2.2,->  Hash  (cost=10613343.83..10613343.83 rows=26715 width=4) (actual time=8360.582..8360.582 rows=58838 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.051..0.067 rows=2 loops=6380)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2016.33 rows=200433 width=0) (actual time=4.196..4.196 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=403698.37..405185.09 rows=594690 width=40) (actual time=9983.530..10121.948 rows=1190297 loops=1)
Q16,2.0,->  Hash Join  (cost=54757.41..346662.31 rows=594690 width=40) (actual time=1293.087..6555.426 rows=1190297 loops=1)
Q12,2.0,Sort  (cost=3047207.90..3047207.90 rows=1 width=27) (actual time=32558.147..32558.147 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3047207.88..3047207.89 rows=1 width=27) (actual time=32558.100..32558.102 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=344005.21..2238520.37 rows=561378 width=175) (actual time=11221.845..32199.296 rows=1147161 loops=1)
Q10,2.0,->  Hash Join  (cost=344003.65..2230799.86 rows=561378 width=153) (actual time=11221.819..31789.372 rows=1147161 loops=1)
Q10,2.0,->  Hash Join  (cost=274975.65..2153351.19 rows=561378 width=12) (actual time=9929.088..29666.598 rows=1147161 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.501..3745.027 rows=7995520 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1831520.45 rows=20174599 width=8) (actual time=0.014..17237.471 rows=37927367 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2342502.41 rows=393294 width=38) (actual time=36.316..31256.572 rows=735643 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1917650.35 rows=806984 width=34) (actual time=36.268..23371.476 rows=1522877 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.035..0.458 rows=56 loops=1)
Q9,1.6,GroupAggregate  (cost=1017443.37..1017447.08 rows=106 width=46) (actual time=89547.713..92200.421 rows=175 loops=1)
Q20,1.6,Sort  (cost=10616111.93..10616114.60 rows=1069 width=51) (actual time=8392.065..8392.169 rows=1778 loops=1)
Q20,1.6,->  Hash Semi Join  (cost=10613720.77..10616058.15 rows=1069 width=51) (actual time=8360.993..8390.495 rows=1778 loops=1)
Q1,1.5,Sort  (cost=4203509.67..4203509.69 rows=6 width=20) (actual time=89405.827..89405.828 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4203509.49..4203509.59 rows=6 width=20) (actual time=89405.777..89405.780 rows=4 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5990.73 rows=597873 width=0) (actual time=4.164..4.164 rows=405760 loops=1)
Q10,1.4,->  HashAggregate  (cost=2252554.82..2258168.60 rows=561378 width=175) (actual time=34147.621..34385.343 rows=381117 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2872.55 rows=139758 width=0) (actual time=574.981..574.981 rows=190781 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2907.49..41854.14 rows=139758 width=24) (actual time=583.355..1043.280 rows=190781 loops=1)
Q9,1.2,->  Seq Scan on part  (cost=0.00..65522.00 rows=88098 width=4) (actual time=0.012..934.417 rows=108737 loops=1)
Q9,1.2,->  Hash Join  (cost=66623.23..351105.15 rows=352392 width=16) (actual time=975.076..4564.249 rows=434948 loops=1)
Q9,1.2,->  Hash  (cost=65522.00..65522.00 rows=88098 width=4) (actual time=974.525..974.525 rows=108737 loops=1)
Q20,1.2,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..672.59 rows=18004 width=0) (actual time=9.034..9.034 rows=21692 loops=1)
Q15,1.2,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.020..18.162 rows=82932 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91436.70 rows=9128870 width=0) (actual time=119.980..119.980 rows=10708480 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=6.006..2114.492 rows=300963 loops=1)
Q8,1.0,->  Nested Loop  (cost=417.11..1681947.77 rows=122620 width=20) (actual time=6.984..10893.931 rows=120829 loops=1)
Q8,1.0,->  Nested Loop  (cost=416.67..1484661.48 rows=402917 width=16) (actual time=6.763..5815.138 rows=397749 loops=1)
Q8,1.0,->  Nested Loop  (cost=38747.55..1728895.97 rows=24524 width=16) (actual time=2224.990..13342.824 rows=24260 loops=1)
Q8,1.0,->  Hash Join  (cost=38749.11..1729357.35 rows=24524 width=38) (actual time=2225.036..13384.912 rows=24260 loops=1)
Q8,1.0,->  Hash Join  (cost=38747.25..1720982.98 rows=24524 width=16) (actual time=2224.968..13191.104 rows=24260 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2215.603..2215.603 rows=300963 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..408.68 rows=13367 width=0) (actual time=4.446..4.446 rows=13247 loops=1)
Q8,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.64 rows=31 width=0) (actual time=0.023..0.023 rows=30 loops=13247)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=412.02..28159.98 rows=13367 width=4) (actual time=6.675..184.191 rows=13247 loops=1)
Q8,1.0,->  Bitmap Heap Scan on lineitem  (cost=4.65..108.65 rows=31 width=20) (actual time=0.043..0.409 rows=30 loops=13247)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=4.091..412.877 rows=60193 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..406494.91 rows=15119991 width=8) (actual time=0.006..2856.297 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2116355.31 rows=1465108 width=42) (actual time=609.101..22461.654 rows=1464689 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2128233.91 rows=60972 width=64) (actual time=657.873..23121.219 rows=59374 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..533895.27 rows=1209599 width=30) (actual time=609.078..8567.532 rows=1203781 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.043..569.564 rows=120105 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.040..45.733 rows=8044 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=608.568..608.568 rows=120105 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=47.959..47.959 rows=8044 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91627.02..1367763.60 rows=761312 width=8) (actual time=120.842..26490.333 rows=765338 loops=1)
Q5,1.0,->  Nested Loop  (cost=83419.48..1902039.41 rows=1840676 width=46) (actual time=2130.367..13515.584 rows=1825778 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.716..1995.476 rows=299493 loops=1)
Q5,1.0,->  Hash Join  (cost=88098.48..1921259.75 rows=73627 width=34) (actual time=2187.220..14213.995 rows=72592 loops=1)
Q5,1.0,->  Hash Join  (cost=83418.91..441124.11 rows=460291 width=38) (actual time=2130.342..7437.970 rows=456122 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2100.778..2100.778 rows=299493 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=45077.28..389549.10 rows=2301457 width=8) (actual time=27.598..4494.218 rows=2281767 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.636..389.230 rows=59899 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=6027.43..270084.51 rows=584139 width=20) (actual time=27.883..6640.897 rows=574158 loops=1)
Q3,1.0,->  Hash Join  (cost=106504.45..493907.01 rows=1462629 width=12) (actual time=404.601..7453.384 rows=1465920 loops=1)
Q3,1.0,->  Hash  (cost=493907.01..493907.01 rows=1462629 width=12) (actual time=7938.779..7938.779 rows=1465920 loops=1)
Q3,1.0,->  Hash  (cost=45965.12..45965.12 rows=299590 width=4) (actual time=374.882..374.882 rows=300276 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6867.35 rows=299590 width=0) (actual time=65.255..65.255 rows=300276 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=56794.45..402108.89 rows=7323155 width=16) (actual time=27.355..4295.928 rows=7309579 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=250571.79..1722024.12 rows=32312747 width=12) (actual time=119.513..25316.172 rows=32315744 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6942.25..45965.12 rows=299590 width=4) (actual time=73.656..293.128 rows=300276 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=4) (actual time=0.012..3709.473 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=406897.75..406897.75 rows=15134975 width=4) (actual time=7620.699..7620.699 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=598992.43..642511.91 rows=59008 width=20) (actual time=8249.361..8829.213 rows=63355 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6544.21 rows=380960 width=0) (actual time=81.477..81.477 rows=381095 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6639.45..51917.65 rows=380960 width=4) (actual time=89.675..450.518 rows=381095 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.288..35.136 rows=4023 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=36.211..36.211 rows=4023 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.277..34.436 rows=4023 loops=1)
Q2,1.0,->  Sort  (cost=465633.45..469632.33 rows=1599552 width=168) (actual time=6497.746..6617.464 rows=1602940 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.303..141.412 rows=20037 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8096 width=30) (actual time=0.048..1164.502 rows=8078 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300805.72 rows=1599552 width=168) (actual time=152.577..5404.949 rows=1602960 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=152.441..152.441 rows=20037 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.255..27.423 rows=4007 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.266..28.304 rows=3991 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.248..27.680 rows=3991 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=677.60..33182.42 rows=20019 width=4) (actual time=12.584..277.313 rows=21692 loops=1)
Q19,1.0,->  Nested Loop  (cost=12894.29..620270.90 rows=1161 width=8) (actual time=33.679..1602.150 rows=1177 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4003.20 rows=399120 width=0) (actual time=4.213..4.213 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..291.39 rows=8168 width=0) (actual time=3.357..3.357 rows=8038 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.87 rows=8016 width=0) (actual time=3.548..3.548 rows=7954 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.51 rows=7978 width=0) (actual time=3.768..3.768 rows=8005 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.74 rows=31 width=0) (actual time=0.025..0.025 rows=30 loops=4737)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12889.55..26768.65 rows=4837 width=30) (actual time=32.498..288.549 rows=4737 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=16) (actual time=0.006..2771.069 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1680210.96 rows=60523796 width=8) (actual time=0.032..8928.029 rows=60044082 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1680210.96 rows=60523796 width=8) (actual time=0.012..8263.122 rows=60044082 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.022..0.040 rows=30 loops=2103)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.022..0.040 rows=30 loops=2103)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.74 rows=2031 width=0) (actual time=0.937..0.937 rows=2103 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=73.25..6716.69 rows=2031 width=4) (actual time=1.290..32.562 rows=2103 loops=1)
Q16,1.0,Sort  (cost=413469.03..413538.72 rows=27877 width=40) (actual time=10778.433..10781.358 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=51024.37..51024.37 rows=297345 width=40) (actual time=1290.564..1290.564 rows=297741 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403698.37..411410.76 rows=27877 width=40) (actual time=9983.578..10718.040 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2490.04..51024.37 rows=297345 width=40) (actual time=35.112..1167.083 rows=297741 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=240431.70..1788469.44 rows=2269306 width=12) (actual time=121.286..24444.982 rows=2248183 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=240431.70..1788469.44 rows=2269306 width=12) (actual time=120.138..21506.107 rows=2248183 loops=1)
Q14,1.0,->  Hash Join  (cost=93562.29..1149245.51 rows=769979 width=29) (actual time=1435.833..24935.558 rows=773331 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8040.29..1052173.82 rows=769979 width=12) (actual time=120.722..22867.538 rows=773331 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..442530.20 rows=14804907 width=8) (actual time=0.023..7550.417 rows=14852764 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..733631.81 rows=14804907 width=8) (actual time=1112.930..18106.497 rows=15352785 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=20) (actual time=0.010..4799.938 rows=15000000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2436758.41 rows=294657 width=15) (actual time=0.134..22041.147 rows=312474 loops=1)
Q12,1.0,->  Hash Join  (cost=596084.94..3042051.38 rows=294657 width=27) (actual time=9953.270..32284.368 rows=312474 loops=1)
Q12,1.0,->  Hash  (cost=406897.75..406897.75 rows=15134975 width=20) (actual time=9907.971..9907.971 rows=15000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.292..25.371 rows=4044 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.283..40.157 rows=4044 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286562.41 rows=319910 width=8) (actual time=26.330..3666.617 rows=323520 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286562.41 rows=319910 width=12) (actual time=41.250..4000.311 rows=323520 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=41.186..41.186 rows=4044 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=26.257..26.257 rows=4044 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.267..24.736 rows=4044 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.266..39.514 rows=4044 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1831520.45 rows=59299726 width=20) (actual time=0.019..18995.590 rows=58749281 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1817038.30 rows=14859591 width=12) (actual time=0.012..16699.248 rows=14808323 loops=1)
Q10,1.0,->  Hash  (cost=267885.03..267885.03 rows=567249 width=8) (actual time=9925.768..9925.768 rows=573165 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5854.30..267885.03 rows=567249 width=8) (actual time=27.586..9656.947 rows=573165 loops=1)
