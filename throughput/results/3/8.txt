BEGIN;
BEGIN
EXPLAIN (ANALYZE, BUFFERS)
select
	o_year,
	sum(case
		when nation = 'FRANCE' then volume
		else 0
	end) / sum(volume) as mkt_share
from
	(
		select
			extract(year from o_orderdate) as o_year,
			l_extendedprice * (1 - l_discount) as volume,
			n2.n_name as nation
		from
			part,
			supplier,
			lineitem,
			orders,
			customer,
			nation n1,
			nation n2,
			region
		where
			p_partkey = l_partkey
			and s_suppkey = l_suppkey
			and l_orderkey = o_orderkey
			and o_custkey = c_custkey
			and c_nationkey = n1.n_nationkey
			and n1.n_regionkey = r_regionkey
			and r_name = 'EUROPE'
			and s_nationkey = n2.n_nationkey
			and o_orderdate between date '1995-01-01' and date '1996-12-31'
			and p_type = 'STANDARD POLISHED TIN'
	) as all_nations
group by
	o_year
order by
	o_year;
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=1665379.39..1665381.23 rows=733 width=38) (actual time=14152.448..14152.448 rows=2 loops=1)
   Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   Sort Method: quicksort  Memory: 25kB
   Buffers: shared hit=1925315 read=355936 dirtied=308 written=8122
   ->  HashAggregate  (cost=1665331.68..1665344.51 rows=733 width=38) (actual time=14152.415..14152.415 rows=2 loops=1)
         Group Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
         Buffers: shared hit=1925312 read=355936 dirtied=308 written=8122
         ->  Hash Join  (cost=38728.32..1664865.34 rows=23317 width=38) (actual time=2666.593..14110.588 rows=23728 loops=1)
               Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
               Buffers: shared hit=1925312 read=355936 dirtied=308 written=8122
               ->  Nested Loop  (cost=38726.76..1664426.59 rows=23317 width=16) (actual time=2666.547..14069.463 rows=23728 loops=1)
                     Buffers: shared hit=1925308 read=355936 dirtied=308 written=8122
                     ->  Hash Join  (cost=38726.47..1656903.04 rows=23317 width=16) (actual time=2666.510..13925.711 rows=23728 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           Buffers: shared hit=1854267 read=355664 dirtied=308 written=8122
                           ->  Nested Loop  (cost=396.32..1617902.53 rows=116585 width=20) (actual time=6.904..11185.927 rows=119237 loops=1)
                                 Buffers: shared hit=1680088 read=353445 dirtied=308 written=8122
                                 ->  Nested Loop  (cost=395.88..1430329.05 rows=383089 width=16) (actual time=6.640..5772.744 rows=393194 loops=1)
                                       Buffers: shared hit=217976 read=240638 dirtied=308 written=8015
                                       ->  Bitmap Heap Scan on part  (cost=395.32..27402.65 rows=12760 width=4) (actual time=6.591..160.854 rows=13115 loops=1)
                                             Recheck Cond: ((p_type)::text = 'STANDARD POLISHED TIN'::text)
                                             Heap Blocks: exact=11148
                                             Buffers: shared hit=3240 read=7990 written=438
                                             ->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..392.13 rows=12760 width=0) (actual time=4.405..4.405 rows=13115 loops=1)
                                                   Index Cond: ((p_type)::text = 'STANDARD POLISHED TIN'::text)
                                                   Buffers: shared read=82
                                       ->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..109.64 rows=31 width=20) (actual time=0.030..0.417 rows=30 loops=13115)
                                             Index Cond: (l_partkey = part.p_partkey)
                                             Buffers: shared hit=214736 read=232648 dirtied=308 written=7577
                                 ->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.013..0.013 rows=0 loops=393194)
                                       Index Cond: (o_orderkey = lineitem.l_orderkey)
                                       Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       Rows Removed by Filter: 1
                                       Buffers: shared hit=1462112 read=112807 written=107
                           ->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2656.556..2656.556 rows=300963 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 14677kB
                                 Buffers: shared hit=174179 read=2219
                                 ->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.788..2546.970 rows=300963 loops=1)
                                       Buffers: shared hit=174179 read=2219
                                       ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.029..0.058 rows=5 loops=1)
                                             Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                             Buffers: shared hit=2
                                             ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.003..0.011 rows=25 loops=1)
                                                   Buffers: shared hit=1
                                             ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.011..0.011 rows=1 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   Buffers: shared hit=1
                                                   ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                                                         Filter: (r_name = 'EUROPE'::bpchar)
                                                         Rows Removed by Filter: 4
                                                         Buffers: shared hit=1
                                       ->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.725..499.223 rows=60193 loops=5)
                                             Recheck Cond: (c_nationkey = n1.n_nationkey)
                                             Rows Removed by Index Recheck: 1439807
                                             Heap Blocks: lossy=176390
                                             Buffers: shared hit=174177 read=2219
                                             ->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.697..3.697 rows=353280 loops=5)
                                                   Index Cond: (c_nationkey = n1.n_nationkey)
                                                   Buffers: shared hit=4 read=2
                     ->  Index Scan using pk_supplier on supplier  (cost=0.29..0.31 rows=1 width=8) (actual time=0.005..0.005 rows=1 loops=23728)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
                           Buffers: shared hit=71041 read=272
               ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.015..0.015 rows=25 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 10kB
                     Buffers: shared hit=1
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.003..0.006 rows=25 loops=1)
                           Buffers: shared hit=1
 Planning time: 6.530 ms
 Execution time: 14153.094 ms
(69 rows)

COMMIT;
COMMIT
