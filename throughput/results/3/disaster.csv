Q21,701327.0,->  Nested Loop Semi Join  (cost=2406.31..2868053.98 rows=1 width=34) (actual time=36.132..38568.729 rows=701327 loops=1)
Q18,402299.1,->  GroupAggregate  (cost=10205533.37..11035275.28 rows=30172433 width=39) (actual time=67967.755..67968.007 rows=75 loops=1)
Q3,316111.1,->  Sort  (cost=2544863.71..2552766.48 rows=3161111 width=20) (actual time=33079.953..33079.954 rows=10 loops=1)
Q18,100599.3,->  Hash Join  (cost=2189914.10..2806481.02 rows=7544952 width=39) (actual time=44198.296..49734.745 rows=75 loops=1)
Q18,100599.3,->  Hash Join  (cost=2120886.10..2624278.74 rows=7544952 width=20) (actual time=43282.536..48818.694 rows=75 loops=1)
Q18,100599.3,->  Hash  (cost=2806481.02..2806481.02 rows=7544952 width=39) (actual time=49734.944..49734.944 rows=75 loops=1)
Q18,57471.3,->  Sort  (cost=10205533.37..10280964.45 rows=30172433 width=39) (actual time=67967.744..67967.780 rows=525 loops=1)
Q18,57471.3,->  Hash Join  (cost=2900792.92..5632071.74 rows=30172433 width=39) (actual time=49927.996..67967.014 rows=525 loops=1)
Q18,54825.9,->  Hash  (cost=2069486.78..2069486.78 rows=4111946 width=4) (actual time=43161.184..43161.184 rows=75 loops=1)
Q18,54825.9,->  HashAggregate  (cost=1976967.99..2028367.32 rows=4111946 width=8) (actual time=37507.220..43160.967 rows=75 loops=1)
Q21,39326.0,->  Nested Loop Anti Join  (cost=2406.88..2868055.76 rows=1 width=26) (actual time=36.518..41359.059 rows=39326 loops=1)
Q10,28945.2,->  Sort  (cost=2292486.82..2293934.08 rows=578904 width=175) (actual time=30139.041..30139.045 rows=20 loops=1)
Q9,26921.6,->  Sort  (cost=1109253.77..1109254.08 rows=121 width=46) (actual time=90835.383..91347.972 rows=3257514 loops=1)
Q9,26921.6,->  Nested Loop  (cost=66774.50..1109245.76 rows=121 width=24) (actual time=931.870..81857.668 rows=3257514 loops=1)
Q9,26921.6,->  Nested Loop  (cost=66774.07..1109187.11 rows=121 width=24) (actual time=931.851..52217.179 rows=3257514 loops=1)
Q9,26921.6,->  Nested Loop  (cost=66773.78..1109148.07 rows=121 width=28) (actual time=931.843..42033.139 rows=3257514 loops=1)
Q9,26921.6,->  Hash Join  (cost=66776.07..1109249.59 rows=121 width=46) (actual time=931.920..85008.057 rows=3257514 loops=1)
Q2,4755.0,->  Merge Join  (cost=465633.87..886911.30 rows=1 width=190) (actual time=6408.425..8352.530 rows=4755 loops=1)
Q21,3974.0,->  HashAggregate  (cost=2868055.76..2868055.77 rows=1 width=26) (actual time=41409.687..41410.708 rows=3974 loops=1)
Q15,3713.0,->  Subquery Scan on revenue3  (cost=1425695.69..1425779.23 rows=3713 width=12) (actual time=47716.422..47721.001 rows=1 loops=1)
Q15,3713.0,->  Sort  (cost=1425999.38..1426008.67 rows=3713 width=12) (actual time=47721.025..47721.025 rows=1 loops=1)
Q15,3713.0,Merge Join  (cost=2834898.60..2839995.50 rows=3713 width=79) (actual time=47729.308..47729.310 rows=1 loops=1)
Q15,3713.0,->  HashAggregate  (cost=1425695.69..1425742.10 rows=3713 width=12) (actual time=47716.421..47721.000 rows=1 loops=1)
Q7,765.0,Sort  (cost=2118905.83..2118913.48 rows=3060 width=64) (actual time=23402.880..23402.880 rows=4 loops=1)
Q7,765.0,->  HashAggregate  (cost=2118682.77..2118728.67 rows=3060 width=64) (actual time=23402.814..23402.822 rows=4 loops=1)
Q8,366.5,Sort  (cost=1665379.39..1665381.23 rows=733 width=38) (actual time=14152.448..14152.448 rows=2 loops=1)
Q8,366.5,->  HashAggregate  (cost=1665331.68..1665344.51 rows=733 width=38) (actual time=14152.415..14152.415 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2868055.78..2868055.79 rows=1 width=26) (actual time=41411.911..41411.917 rows=100 loops=1)
Q21,100.0,Limit  (cost=2868055.78..2868055.79 rows=1 width=26) (actual time=41411.912..41411.929 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=886911.31..886911.31 rows=1 width=190) (actual time=8357.381..8357.395 rows=100 loops=1)
Q2,100.0,Limit  (cost=886911.31..886911.31 rows=1 width=190) (actual time=8357.382..8357.408 rows=100 loops=1)
Q11,31.5,Sort  (cost=614372.93..615172.70 rows=319910 width=12) (actual time=6924.356..6925.479 rows=10130 loops=1)
Q11,31.5,->  HashAggregate  (cost=292160.84..296159.71 rows=319910 width=12) (actual time=6845.844..6918.731 rows=10130 loops=1)
Q3,27.8,->  HashAggregate  (cost=2444942.12..2476553.23 rows=3161111 width=20) (actual time=33022.160..33058.984 rows=113444 loops=1)
Q15,26.9,->  HashAggregate  (cost=1408815.37..1408852.50 rows=3713 width=12) (actual time=22182.904..22211.973 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.006..0.006 rows=1 loops=727782)
Q14,14.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7734.10 rows=758610 width=0) (actual time=119.495..119.495 rows=10728960 loops=1)
Q3,10.5,->  Hash Join  (cost=767337.88..2397525.46 rows=3161111 width=20) (actual time=8026.522..32753.505 rows=300339 loops=1)
Q16,10.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2423.71 rows=321560 width=0) (actual time=34.879..34.879 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.016..0.083 rows=8 loops=434200)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.697..3.697 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.594..3.594 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.237..0.237 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.245..0.245 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.239..0.239 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.277..0.277 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.271..0.271 rows=23040 loops=1)
Q5,5.0,Sort  (cost=1962168.08..1962168.15 rows=25 width=34) (actual time=14793.072..14793.072 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1962167.25..1962167.50 rows=25 width=34) (actual time=14793.027..14793.029 rows=5 loops=1)
Q4,5.0,Sort  (cost=1482187.37..1482187.38 rows=1 width=16) (actual time=13604.767..13604.767 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.13 rows=5 width=4) (actual time=0.014..0.014 rows=1 loops=574947)
Q4,5.0,->  HashAggregate  (cost=1482187.35..1482187.36 rows=1 width=16) (actual time=13604.718..13604.718 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.003..0.003 rows=1 loops=701327)
Q15,4.7,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.051..6.196 rows=20927 loops=1)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5723.09 rows=568309 width=0) (actual time=27.446..27.446 rows=2538240 loops=1)
Q13,4.4,Sort  (cost=850652.07..850652.57 rows=200 width=8) (actual time=25903.482..25903.485 rows=45 loops=1)
Q13,4.4,->  HashAggregate  (cost=850642.43..850644.43 rows=200 width=8) (actual time=25903.414..25903.426 rows=45 loops=1)
Q10,4.3,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5889.70 rows=584970 width=0) (actual time=27.486..27.486 rows=2556160 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.010..0.010 rows=1 loops=1204614)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.01 rows=15 width=16) (actual time=0.010..0.011 rows=4 loops=456436)
Q17,3.6,->  Nested Loop  (cost=82.65..113796.06 rows=20015 width=4) (actual time=1.689..207.395 rows=5438 loops=1)
Q4,3.3,->  Nested Loop Semi Join  (cost=5865.74..1481409.95 rows=155480 width=16) (actual time=27.701..13288.336 rows=527046 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.014..0.033 rows=3 loops=2001)
Q5,3.2,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..61413.78 rows=8183171 width=0) (actual time=27.323..27.323 rows=2538240 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.30 rows=1 width=8) (actual time=0.313..0.383 rows=3 loops=21999)
Q3,2.9,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..55914.25 rows=7449900 width=0) (actual time=27.494..27.494 rows=2556160 loops=1)
Q3,2.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..241811.14 rows=32221752 width=0) (actual time=119.979..119.979 rows=10750720 loops=1)
Q22,2.3,Sort  (cost=694671.02..694671.02 rows=3 width=20) (actual time=9312.614..9312.615 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=641784.16..641784.20 rows=3 width=20) (actual time=9312.572..9312.574 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.036..0.051 rows=2 loops=6472)
Q20,2.0,->  Nested Loop  (cost=754.48..11668697.83 rows=29387 width=4) (actual time=13.428..8761.158 rows=59546 loops=1)
Q20,2.0,->  Hash  (cost=11668697.83..11668697.83 rows=29387 width=4) (actual time=8797.340..8797.340 rows=59546 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2016.33 rows=200433 width=0) (actual time=4.239..4.239 rows=405760 loops=1)
Q12,2.0,Sort  (cost=3047036.78..3047036.79 rows=1 width=27) (actual time=32636.574..32636.575 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3047036.76..3047036.77 rows=1 width=27) (actual time=32636.526..32636.526 rows=2 loops=1)
Q16,1.9,->  Sort  (cost=403956.28..405447.68 rows=596558 width=40) (actual time=10497.767..10638.286 rows=1187984 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.456..4131.756 rows=7995520 loops=1)
Q16,1.9,->  Hash Join  (cost=54803.99..346727.57 rows=596558 width=40) (actual time=1248.459..7036.075 rows=1187984 loops=1)
Q10,1.9,->  Hash Join  (cost=346700.18..2256820.76 rows=578904 width=175) (actual time=6349.108..27755.282 rows=1146395 loops=1)
Q10,1.9,->  Hash Join  (cost=346698.62..2248859.26 rows=578904 width=153) (actual time=6349.072..27341.283 rows=1146395 loops=1)
Q10,1.9,->  Hash Join  (cost=277670.62..2171147.70 rows=578904 width=12) (actual time=5037.216..25277.517 rows=1146395 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1831520.45 rows=20174599 width=8) (actual time=0.014..19628.220 rows=37927367 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2342502.41 rows=393294 width=38) (actual time=36.055..33589.631 rows=727782 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1917650.35 rows=806984 width=34) (actual time=35.993..26022.048 rows=1505637 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.040..0.412 rows=56 loops=1)
Q1,1.5,Sort  (cost=4199834.01..4199834.03 rows=6 width=20) (actual time=89512.472..89512.472 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4199833.83..4199833.93 rows=6 width=20) (actual time=89512.424..89512.426 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=2271293.36..2277082.40 rows=578904 width=175) (actual time=29746.141..29998.173 rows=381241 loops=1)
Q9,1.4,GroupAggregate  (cost=1109253.77..1109258.01 rows=121 width=46) (actual time=90844.890..93475.727 rows=175 loops=1)
Q20,1.4,Sort  (cost=11671508.37..11671511.31 rows=1175 width=51) (actual time=8828.778..8828.877 rows=1761 loops=1)
Q20,1.4,->  Hash Semi Join  (cost=11669108.17..11671448.46 rows=1175 width=51) (actual time=8797.743..8827.285 rows=1761 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5990.73 rows=597873 width=0) (actual time=4.166..4.166 rows=405760 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2874.30 rows=139927 width=0) (actual time=738.147..738.147 rows=191229 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2909.29..41860.37 rows=139927 width=24) (actual time=746.682..882.592 rows=191229 loops=1)
Q18,1.3,Limit  (cost=10205533.37..10205536.12 rows=100 width=39) (actual time=67967.758..67968.016 rows=75 loops=1)
Q15,1.2,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..103689.54 rows=13805538 width=0) (actual time=119.811..119.811 rows=10750720 loops=1)
Q15,1.2,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..103689.54 rows=13805538 width=0) (actual time=119.594..119.594 rows=10750720 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91379.54 rows=9123154 width=0) (actual time=119.577..119.577 rows=10676480 loops=1)
Q20,1.1,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.54 rows=19999 width=0) (actual time=8.998..8.998 rows=21999 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=100097 width=4) (actual time=0.009..891.686 rows=108550 loops=1)
Q9,1.0,->  Hash Join  (cost=66773.21..351735.09 rows=400388 width=16) (actual time=931.725..5045.616 rows=434200 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=100097 width=4) (actual time=931.276..931.276 rows=108550 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.788..2546.970 rows=300963 loops=1)
Q8,1.0,->  Nested Loop  (cost=396.32..1617902.53 rows=116585 width=20) (actual time=6.904..11185.927 rows=119237 loops=1)
Q8,1.0,->  Nested Loop  (cost=395.88..1430329.05 rows=383089 width=16) (actual time=6.640..5772.744 rows=393194 loops=1)
Q8,1.0,->  Nested Loop  (cost=38726.76..1664426.59 rows=23317 width=16) (actual time=2666.547..14069.463 rows=23728 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..109.64 rows=31 width=20) (actual time=0.030..0.417 rows=30 loops=13115)
Q8,1.0,->  Hash Join  (cost=38728.32..1664865.34 rows=23317 width=38) (actual time=2666.593..14110.588 rows=23728 loops=1)
Q8,1.0,->  Hash Join  (cost=38726.47..1656903.04 rows=23317 width=16) (actual time=2666.510..13925.711 rows=23728 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2656.556..2656.556 rows=300963 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..392.13 rows=12760 width=0) (actual time=4.405..4.405 rows=13115 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=395.32..27402.65 rows=12760 width=4) (actual time=6.591..160.854 rows=13115 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.725..499.223 rows=60193 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..404477.52 rows=15044952 width=8) (actual time=0.006..3598.891 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2105934.40 rows=1457864 width=42) (actual time=610.204..22649.557 rows=1462855 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2117772.72 rows=60670 width=64) (actual time=660.800..23307.163 rows=58603 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..531536.45 rows=1203596 width=30) (actual time=610.180..9307.562 rows=1204614 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.039..571.065 rows=120157 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.035..48.224 rows=7968 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=609.693..609.693 rows=120157 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=50.489..50.489 rows=7968 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91569.75..1364383.71 rows=760836 width=8) (actual time=120.411..30741.061 rows=760591 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.691..1897.736 rows=300270 loops=1)
Q5,1.0,->  Nested Loop  (cost=100329.99..1942246.16 rows=1836397 width=46) (actual time=2033.062..13956.633 rows=1827218 loops=1)
Q5,1.0,->  Hash Join  (cost=105008.99..1961432.69 rows=73456 width=34) (actual time=2087.918..14710.015 rows=73216 loops=1)
Q5,1.0,->  Hash Join  (cost=100329.42..490054.25 rows=459209 width=38) (actual time=2033.041..8292.003 rows=456436 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2003.547..2003.547 rows=300270 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=61987.79..438510.36 rows=2296046 width=8) (actual time=27.497..5339.771 rows=2277888 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.624..369.680 rows=60054 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5865.17..268164.81 rows=568309 width=20) (actual time=27.651..4913.220 rows=574947 loops=1)
Q3,1.0,->  Hash Join  (cost=107454.09..498911.12 rows=1484815 width=12) (actual time=722.697..7435.391 rows=1475143 loops=1)
Q3,1.0,->  Hash  (cost=498911.12..498911.12 rows=1484815 width=12) (actual time=7899.570..7899.570 rows=1475143 loops=1)
Q3,1.0,->  Hash  (cost=45940.37..45940.37 rows=298960 width=4) (actual time=693.037..693.037 rows=300441 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6850.63 rows=298960 width=0) (actual time=67.141..67.141 rows=300441 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=57776.72..406448.47 rows=7449900 width=16) (actual time=27.654..4370.924 rows=7377058 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=249866.57..1727611.47 rows=32221752 width=12) (actual time=120.729..19731.007 rows=31981622 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6925.37..45940.37 rows=298960 width=4) (actual time=75.842..602.559 rows=300441 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=4) (actual time=0.013..3876.475 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=406090.48..406090.48 rows=15104948 width=4) (actual time=8246.083..8246.083 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=597811.62..641341.07 rows=59079 width=20) (actual time=9046.941..9290.435 rows=63671 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6547.62 rows=381419 width=0) (actual time=87.824..87.824 rows=382387 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6642.98..51933.23 rows=381419 width=4) (actual time=96.831..608.682 rows=382387 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.275..34.877 rows=3974 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=35.947..35.947 rows=3974 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.263..34.231 rows=3974 loops=1)
Q2,1.0,->  Sort  (cost=465633.45..469632.33 rows=1599552 width=168) (actual time=6408.092..6543.209 rows=1603191 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.302..141.560 rows=20042 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=7955 width=30) (actual time=0.099..1136.935 rows=7982 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300805.72 rows=1599552 width=168) (actual time=152.568..5298.022 rows=1603360 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=152.428..152.428 rows=20042 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.252..27.441 rows=4008 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.268..28.370 rows=3973 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.251..27.789 rows=3973 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.05..34890.33 rows=22021 width=4) (actual time=12.623..299.161 rows=21999 loops=1)
Q19,1.0,->  Nested Loop  (cost=12894.28..619523.15 rows=1159 width=8) (actual time=33.552..1892.612 rows=1102 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4003.20 rows=399120 width=0) (actual time=4.161..4.161 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.91 rows=8119 width=0) (actual time=3.335..3.335 rows=7912 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.27 rows=8054 width=0) (actual time=3.647..3.647 rows=8135 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.59 rows=7989 width=0) (actual time=3.615..3.615 rows=7928 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.74 rows=31 width=0) (actual time=0.026..0.026 rows=30 loops=4751)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12889.54..26753.45 rows=4831 width=30) (actual time=31.405..183.092 rows=4751 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..405686.04 rows=15089904 width=16) (actual time=0.007..2648.822 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1675243.66 rows=60344866 width=8) (actual time=0.037..9031.676 rows=60045826 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1675243.66 rows=60344866 width=8) (actual time=0.043..7264.064 rows=60045826 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.026..0.042 rows=30 loops=2001)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.026..0.042 rows=30 loops=2001)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.39 rows=1996 width=0) (actual time=0.953..0.953 rows=2001 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=72.89..6616.51 rows=1996 width=4) (actual time=1.292..39.565 rows=2001 loops=1)
Q16,1.0,Sort  (cost=413758.22..413828.13 rows=27964 width=40) (actual time=11292.499..11295.054 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=51059.28..51059.28 rows=298279 width=40) (actual time=1245.683..1245.683 rows=297154 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403956.28..411692.90 rows=27964 width=40) (actual time=10497.822..11233.095 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2498.28..51059.28 rows=298279 width=40) (actual time=34.941..1117.672 rows=297154 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=104252.21..1386308.28 rows=2250709 width=12) (actual time=120.372..20271.468 rows=2247363 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=104252.21..1386308.28 rows=2250709 width=12) (actual time=120.621..23310.593 rows=2247363 loops=1)
Q14,1.0,->  Hash Join  (cost=93445.75..1142788.51 rows=758610 width=29) (actual time=1582.562..24986.800 rows=750079 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=7923.75..1045887.36 rows=758610 width=12) (actual time=120.309..22799.967 rows=750079 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..444735.19 rows=14968962 width=8) (actual time=0.017..7373.525 rows=14838053 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..738297.62 rows=14968962 width=8) (actual time=785.246..16848.158 rows=15338072 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=20) (actual time=0.011..3916.743 rows=15000000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2436758.41 rows=291147 width=15) (actual time=0.099..23733.584 rows=311191 loops=1)
Q12,1.0,->  Hash Join  (cost=596084.94..3041941.69 rows=291147 width=27) (actual time=8275.285..32313.738 rows=311191 loops=1)
Q12,1.0,->  Hash  (cost=406897.75..406897.75 rows=15134975 width=20) (actual time=8229.733..8229.733 rows=15000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.324..23.891 rows=3934 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.312..32.343 rows=3934 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286562.41 rows=319910 width=8) (actual time=24.813..2539.048 rows=314720 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286562.41 rows=319910 width=12) (actual time=33.341..4001.519 rows=314720 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=33.271..33.271 rows=3934 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=24.736..24.736 rows=3934 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.296..23.279 rows=3934 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.293..31.686 rows=3934 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1821790.15 rows=59451092 width=20) (actual time=0.015..18543.763 rows=59232347 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1831520.45 rows=14978025 width=12) (actual time=0.011..17059.002 rows=14807964 loops=1)
Q10,1.0,->  Hash  (cost=270358.50..270358.50 rows=584970 width=8) (actual time=5033.698..5033.698 rows=573702 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=6035.95..270358.50 rows=584970 width=8) (actual time=27.652..4855.282 rows=573702 loops=1)
