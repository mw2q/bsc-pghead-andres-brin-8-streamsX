Q21,704383.0,->  Nested Loop Semi Join  (cost=2406.31..2868053.98 rows=1 width=34) (actual time=34.154..35685.378 rows=704383 loops=1)
Q18,356022.3,->  GroupAggregate  (cost=10235701.75..11067903.95 rows=30261898 width=39) (actual time=66767.233..66767.512 rows=85 loops=1)
Q3,316530.2,->  Sort  (cost=2552120.83..2560034.09 rows=3165302 width=20) (actual time=36099.147..36099.149 rows=10 loops=1)
Q18,89029.2,->  Hash Join  (cost=2195776.05..2814061.74 rows=7567488 width=39) (actual time=43113.742..49033.319 rows=85 loops=1)
Q18,89029.2,->  Hash Join  (cost=2126748.05..2631521.42 rows=7567488 width=20) (actual time=41973.123..47892.452 rows=85 loops=1)
Q18,89029.2,->  Hash  (cost=2814061.74..2814061.74 rows=7567488 width=39) (actual time=49033.481..49033.481 rows=85 loops=1)
Q18,50860.3,->  Sort  (cost=10235701.75..10311356.50 rows=30261898 width=39) (actual time=66767.222..66767.253 rows=595 loops=1)
Q18,50860.3,->  Hash Join  (cost=2908655.34..5648032.75 rows=30261898 width=39) (actual time=49088.618..66766.384 rows=595 loops=1)
Q18,48375.8,->  Hash  (cost=2075348.72..2075348.72 rows=4111946 width=4) (actual time=41862.863..41862.863 rows=85 loops=1)
Q18,48375.8,->  HashAggregate  (cost=1982829.94..2034229.26 rows=4111946 width=8) (actual time=36701.455..41862.705 rows=85 loops=1)
Q21,39286.0,->  Nested Loop Anti Join  (cost=2406.88..2868055.76 rows=1 width=26) (actual time=36.245..38458.989 rows=39286 loops=1)
Q10,28248.4,->  Sort  (cost=2277853.66..2279266.08 rows=564968 width=175) (actual time=30902.328..30902.330 rows=20 loops=1)
Q9,23459.7,->  Sort  (cost=1230306.02..1230306.37 rows=140 width=46) (actual time=95083.757..95682.582 rows=3284369 loops=1)
Q9,23459.7,->  Nested Loop  (cost=66974.69..1230296.84 rows=140 width=24) (actual time=992.911..85900.565 rows=3284369 loops=1)
Q9,23459.7,->  Nested Loop  (cost=66974.26..1230228.99 rows=140 width=24) (actual time=992.835..51553.292 rows=3284369 loops=1)
Q9,23459.7,->  Nested Loop  (cost=66973.96..1230183.82 rows=140 width=28) (actual time=992.825..41404.951 rows=3284369 loops=1)
Q9,23459.7,->  Hash Join  (cost=66976.25..1230301.03 rows=140 width=46) (actual time=992.978..89189.805 rows=3284369 loops=1)
Q2,4731.0,->  Merge Join  (cost=465633.87..893506.53 rows=1 width=190) (actual time=6302.731..8273.991 rows=4731 loops=1)
Q21,3991.0,->  HashAggregate  (cost=2868055.76..2868055.77 rows=1 width=26) (actual time=38510.273..38511.298 rows=3991 loops=1)
Q15,3765.0,->  Subquery Scan on revenue2  (cost=1954156.40..1954241.11 rows=3765 width=12) (actual time=50192.420..50194.051 rows=1 loops=1)
Q15,3765.0,->  Sort  (cost=1954464.72..1954474.14 rows=3765 width=12) (actual time=50194.070..50194.071 rows=1 loops=1)
Q15,3765.0,Merge Join  (cost=3891638.24..3896735.91 rows=3765 width=79) (actual time=50213.478..50213.481 rows=1 loops=1)
Q15,3765.0,->  HashAggregate  (cost=1954156.40..1954203.46 rows=3765 width=12) (actual time=50192.419..50194.050 rows=1 loops=1)
Q7,765.0,Sort  (cost=2131461.80..2131469.45 rows=3060 width=64) (actual time=21057.592..21057.592 rows=4 loops=1)
Q7,765.0,->  HashAggregate  (cost=2131238.73..2131284.63 rows=3060 width=64) (actual time=21057.529..21057.534 rows=4 loops=1)
Q8,366.5,Sort  (cost=1734455.45..1734457.28 rows=733 width=38) (actual time=11640.075..11640.076 rows=2 loops=1)
Q8,366.5,->  HashAggregate  (cost=1734407.74..1734420.57 rows=733 width=38) (actual time=11640.036..11640.038 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2868055.78..2868055.79 rows=1 width=26) (actual time=38512.476..38512.483 rows=100 loops=1)
Q21,100.0,Limit  (cost=2868055.78..2868055.79 rows=1 width=26) (actual time=38512.478..38512.495 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=893506.54..893506.55 rows=1 width=190) (actual time=8278.911..8278.926 rows=100 loops=1)
Q2,100.0,Limit  (cost=893506.54..893506.55 rows=1 width=190) (actual time=8278.913..8278.938 rows=100 loops=1)
Q11,34.7,Sort  (cost=614372.93..615172.70 rows=319910 width=12) (actual time=8046.624..8047.727 rows=9218 loops=1)
Q11,34.7,->  HashAggregate  (cost=292160.84..296159.71 rows=319910 width=12) (actual time=7952.875..8041.432 rows=9218 loops=1)
Q3,27.7,->  HashAggregate  (cost=2452066.77..2483719.79 rows=3165302 width=20) (actual time=36029.783..36077.833 rows=114026 loops=1)
Q15,26.5,->  HashAggregate  (cost=1937088.50..1937126.15 rows=3765 width=12) (actual time=23383.653..23414.166 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.005..0.005 rows=1 loops=731058)
Q14,13.3,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..8127.58 rows=797958 width=0) (actual time=118.943..118.943 rows=10676480 loops=1)
Q3,10.4,->  Hash Join  (cost=767780.86..2404587.24 rows=3165302 width=20) (actual time=9734.912..35733.305 rows=301973 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2414.41 rows=320320 width=0) (actual time=34.797..34.797 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.017..0.080 rows=8 loops=437476)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.605..3.605 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.603..3.603 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.239..0.239 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.267..0.267 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.256..0.256 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.272..0.272 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.244..0.244 rows=23040 loops=1)
Q5,5.0,Sort  (cost=1973374.89..1973374.95 rows=25 width=34) (actual time=16905.921..16905.921 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1973374.06..1973374.31 rows=25 width=34) (actual time=16905.877..16905.877 rows=5 loops=1)
Q4,5.0,Sort  (cost=1497833.67..1497833.67 rows=1 width=16) (actual time=12909.646..12909.647 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.07 rows=5 width=4) (actual time=0.012..0.012 rows=1 loops=575090)
Q4,5.0,->  HashAggregate  (cost=1497833.65..1497833.66 rows=1 width=16) (actual time=12909.596..12909.598 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.003..0.003 rows=1 loops=704383)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5836.52 rows=579652 width=0) (actual time=27.613..27.613 rows=2556160 loops=1)
Q13,4.4,Sort  (cost=850652.07..850652.57 rows=200 width=8) (actual time=26520.492..26520.495 rows=45 loops=1)
Q13,4.4,->  HashAggregate  (cost=850642.43..850644.43 rows=200 width=8) (actual time=26520.420..26520.430 rows=45 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5748.74 rows=570874 width=0) (actual time=27.381..27.381 rows=2540800 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.009..0.009 rows=1 loops=1201738)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.02 rows=15 width=16) (actual time=0.012..0.014 rows=4 loops=454417)
Q17,3.6,->  Nested Loop  (cost=83.00..115704.26 rows=20336 width=4) (actual time=1.657..206.310 rows=5567 loops=1)
Q15,3.4,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..280754.46 rows=37414194 width=0) (actual time=119.939..119.939 rows=10718720 loops=1)
Q15,3.4,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..280754.46 rows=37414194 width=0) (actual time=118.694..118.694 rows=10728960 loops=1)
Q4,3.3,->  Nested Loop Semi Join  (cost=5982.00..1497046.23 rows=157483 width=16) (actual time=27.851..12620.363 rows=527427 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.59 rows=10 width=12) (actual time=0.016..0.038 rows=3 loops=2078)
Q5,3.2,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..61719.95 rows=8223994 width=0) (actual time=27.512..27.512 rows=2553600 loops=1)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..244846.63 rows=32626484 width=0) (actual time=119.765..119.765 rows=10750720 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.30 rows=1 width=8) (actual time=0.312..0.381 rows=3 loops=22049)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..55178.11 rows=7351748 width=0) (actual time=27.486..27.486 rows=2556160 loops=1)
Q22,2.3,Sort  (cost=695313.28..695313.28 rows=3 width=20) (actual time=9075.982..9075.983 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=642397.58..642397.62 rows=3 width=20) (actual time=9075.940..9075.941 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.040..0.056 rows=2 loops=6398)
Q20,2.0,->  Nested Loop  (cost=754.48..11668697.83 rows=29387 width=4) (actual time=13.468..8667.664 rows=60129 loops=1)
Q20,2.0,->  Hash  (cost=11668697.83..11668697.83 rows=29387 width=4) (actual time=8702.548..8702.548 rows=60129 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2016.33 rows=200433 width=0) (actual time=4.201..4.201 rows=405760 loops=1)
Q15,2.0,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.025..14.609 rows=47970 loops=1)
Q12,2.0,Sort  (cost=3043994.10..3043994.11 rows=1 width=27) (actual time=33391.019..33391.019 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3043994.08..3043994.09 rows=1 width=27) (actual time=33390.970..33390.971 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=344648.05..2243046.19 rows=564968 width=175) (actual time=8720.638..28732.030 rows=1136831 loops=1)
Q10,2.0,->  Hash Join  (cost=344646.49..2235276.32 rows=564968 width=153) (actual time=8720.609..28334.664 rows=1136831 loops=1)
Q10,2.0,->  Hash Join  (cost=275618.49..2157773.80 rows=564968 width=12) (actual time=7409.350..26354.167 rows=1136831 loops=1)
Q16,1.9,->  Sort  (cost=403632.04..405117.49 rows=594182 width=40) (actual time=10635.095..10776.159 rows=1188032 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=1.316..4341.002 rows=7995520 loops=1)
Q16,1.9,->  Hash Join  (cost=54748.55..346648.37 rows=594182 width=40) (actual time=1354.168..7226.457 rows=1188032 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1831520.45 rows=20174599 width=8) (actual time=0.013..17434.413 rows=37927367 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2342502.41 rows=393294 width=38) (actual time=34.080..31487.632 rows=731058 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1917650.35 rows=806984 width=34) (actual time=33.955..23448.912 rows=1514319 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.056..1.265 rows=56 loops=1)
Q20,1.6,Sort  (cost=11671508.37..11671511.31 rows=1175 width=51) (actual time=8732.408..8732.515 rows=1888 loops=1)
Q20,1.6,->  Hash Semi Join  (cost=11669108.17..11671448.46 rows=1175 width=51) (actual time=8702.983..8730.947 rows=1888 loops=1)
Q1,1.5,Sort  (cost=4227201.35..4227201.37 rows=6 width=20) (actual time=90062.771..90062.772 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4227201.17..4227201.27 rows=6 width=20) (actual time=90062.701..90062.703 rows=4 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5990.73 rows=597873 width=0) (actual time=4.184..4.184 rows=405760 loops=1)
Q10,1.4,->  HashAggregate  (cost=2257170.39..2262820.07 rows=564968 width=175) (actual time=30546.371..30761.576 rows=378779 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2877.17 rows=140217 width=0) (actual time=732.811..732.811 rows=190726 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2912.23..41870.92 rows=140217 width=24) (actual time=741.125..836.405 rows=190726 loops=1)
Q9,1.2,GroupAggregate  (cost=1230306.02..1230310.92 rows=140 width=46) (actual time=95093.855..97900.925 rows=175 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91288.10 rows=9114010 width=0) (actual time=118.705..118.705 rows=10664960 loops=1)
Q20,1.1,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.54 rows=19999 width=0) (actual time=9.278..9.278 rows=22049 loops=1)
Q18,1.1,Limit  (cost=10235701.75..10235704.50 rows=100 width=39) (actual time=66767.237..66767.526 rows=85 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=116112 width=4) (actual time=0.007..946.458 rows=109369 loops=1)
Q9,1.0,->  Hash Join  (cost=66973.40..352575.88 rows=464448 width=16) (actual time=992.790..5192.237 rows=437476 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=116112 width=4) (actual time=992.330..992.330 rows=109369 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.718..1928.028 rows=299493 loops=1)
Q8,1.0,->  Nested Loop  (cost=421.36..1686465.15 rows=123165 width=20) (actual time=6.869..9310.959 rows=122012 loops=1)
Q8,1.0,->  Nested Loop  (cost=420.93..1488298.64 rows=404710 width=16) (actual time=6.825..5325.493 rows=401977 loops=1)
Q8,1.0,->  Nested Loop  (cost=38751.80..1733451.65 rows=24633 width=16) (actual time=2033.242..11555.423 rows=24692 loops=1)
Q8,1.0,->  Hash Join  (cost=38753.36..1733915.08 rows=24633 width=38) (actual time=2033.287..11595.977 rows=24692 loops=1)
Q8,1.0,->  Hash Join  (cost=38751.51..1725503.50 rows=24633 width=16) (actual time=2033.232..11412.168 rows=24692 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2023.541..2023.541 rows=299493 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..412.93 rows=13400 width=0) (actual time=4.498..4.498 rows=13380 loops=1)
Q8,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.64 rows=31 width=0) (actual time=0.023..0.023 rows=30 loops=13380)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=416.28..28203.15 rows=13400 width=4) (actual time=6.727..98.957 rows=13380 loops=1)
Q8,1.0,->  Bitmap Heap Scan on lineitem  (cost=4.65..108.65 rows=31 width=20) (actual time=0.040..0.375 rows=30 loops=13380)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.639..376.163 rows=59899 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=8) (actual time=0.006..2575.080 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2118436.65 rows=1466551 width=42) (actual time=623.790..20321.538 rows=1459577 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2130323.25 rows=61032 width=64) (actual time=671.724..20963.803 rows=58404 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..534366.29 rows=1210798 width=30) (actual time=623.760..8205.892 rows=1201738 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.061..584.282 rows=119712 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.036..45.346 rows=8018 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=623.266..623.266 rows=119712 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=47.617..47.617 rows=8018 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91486.43..1363024.65 rows=793313 width=8) (actual time=119.562..28535.085 rows=795681 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.717..2927.715 rows=299436 loops=1)
Q5,1.0,->  Nested Loop  (cost=100639.03..1953362.00 rows=1847358 width=46) (actual time=3069.462..16024.668 rows=1815986 loops=1)
Q5,1.0,->  Hash Join  (cost=105318.03..1972635.12 rows=73894 width=34) (actual time=3132.552..16816.898 rows=72721 loops=1)
Q5,1.0,->  Hash Join  (cost=100638.46..492307.50 rows=461500 width=38) (actual time=3069.438..9038.058 rows=454417 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=3039.749..3039.749 rows=299436 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=62296.83..440697.74 rows=2307500 width=8) (actual time=27.676..5003.010 rows=2275313 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.637..574.836 rows=59887 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5981.43..270224.21 rows=579652 width=20) (actual time=27.814..5315.157 rows=575090 loops=1)
Q3,1.0,->  Hash Join  (cost=106726.05..496423.36 rows=1468340 width=12) (actual time=625.846..9068.864 rows=1459368 loops=1)
Q3,1.0,->  Hash  (cost=496423.36..496423.36 rows=1468340 width=12) (actual time=9608.053..9608.053 rows=1459368 loops=1)
Q3,1.0,->  Hash  (cost=45965.12..45965.12 rows=299590 width=4) (actual time=596.244..596.244 rows=300276 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6867.35 rows=299590 width=0) (actual time=66.227..66.227 rows=300276 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=57016.05..404460.90 rows=7351748 width=16) (actual time=27.651..5552.540 rows=7277411 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=253003.25..1735807.30 rows=32626484 width=12) (actual time=120.515..20432.262 rows=32381567 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6942.25..45965.12 rows=299590 width=4) (actual time=74.728..509.968 rows=300276 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406494.91 rows=15119991 width=4) (actual time=0.011..4108.657 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=406494.91..406494.91 rows=15119991 width=4) (actual time=8074.120..8074.120 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=598407.03..641953.56 rows=59202 width=20) (actual time=8860.616..9054.423 rows=63983 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6553.56 rows=382209 width=0) (actual time=84.596..84.596 rows=381558 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6649.11..51960.09 rows=382209 width=4) (actual time=93.020..604.922 rows=381558 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.294..32.821 rows=3991 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=33.876..33.876 rows=3991 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.279..32.127 rows=3991 loops=1)
Q2,1.0,->  Sort  (cost=465633.45..469632.33 rows=1599552 width=168) (actual time=6301.881..6425.295 rows=1603949 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.310..146.103 rows=20051 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8123 width=30) (actual time=0.488..1160.264 rows=8024 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300805.72 rows=1599552 width=168) (actual time=157.619..5186.528 rows=1604080 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=157.474..157.474 rows=20051 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.251..28.356 rows=4010 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.289..26.673 rows=4079 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.272..26.087 rows=4079 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.05..34890.33 rows=22021 width=4) (actual time=12.944..229.757 rows=22049 loops=1)
Q19,1.0,->  Nested Loop  (cost=12876.43..615375.61 rows=1145 width=8) (actual time=35.775..1299.838 rows=1123 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4003.20 rows=399120 width=0) (actual time=4.176..4.176 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.91 rows=8119 width=0) (actual time=3.326..3.326 rows=7912 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.39 rows=7966 width=0) (actual time=3.678..3.678 rows=8101 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..272.67 rows=7896 width=0) (actual time=3.555..3.555 rows=7938 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.74 rows=31 width=0) (actual time=0.025..0.025 rows=30 loops=4646)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12871.69..26659.38 rows=4798 width=30) (actual time=31.645..227.163 rows=4646 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=16) (actual time=0.006..3048.678 rows=15000000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1680210.96 rows=60523796 width=8) (actual time=0.004..7767.303 rows=59983922 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1680210.96 rows=60523796 width=8) (actual time=0.012..7170.205 rows=59983922 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.023..0.037 rows=30 loops=2078)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.023..0.037 rows=30 loops=2078)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.73 rows=2030 width=0) (actual time=0.998..0.998 rows=2078 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=73.23..6713.66 rows=2030 width=4) (actual time=1.341..33.828 rows=2078 loops=1)
Q16,1.0,Sort  (cost=413394.17..413463.80 rows=27853 width=40) (actual time=11430.635..11433.333 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=51018.68..51018.68 rows=297091 width=40) (actual time=1350.807..1350.807 rows=297168 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403632.04..411337.84 rows=27853 width=40) (actual time=10635.147..11371.104 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2488.68..51018.68 rows=297091 width=40) (actual time=34.863..1225.719 rows=297168 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=281323.39..1914331.30 rows=2275720 width=12) (actual time=119.474..21441.931 rows=2244870 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=281323.39..1914331.30 rows=2275720 width=12) (actual time=120.716..24795.556 rows=2244870 loops=1)
Q14,1.0,->  Hash Join  (cost=93849.07..1155840.72 rows=797958 width=29) (actual time=1666.903..26491.248 rows=773184 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8327.07..1058349.35 rows=797958 width=12) (actual time=119.701..24081.853 rows=773184 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..444735.19 rows=14968962 width=8) (actual time=0.018..7062.314 rows=14838053 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..738297.62 rows=14968962 width=8) (actual time=1063.772..17070.325 rows=15338072 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..406494.91 rows=15119991 width=20) (actual time=0.013..4178.147 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2434360.13 rows=290034 width=15) (actual time=0.048..23527.804 rows=311829 loops=1)
Q12,1.0,->  Hash Join  (cost=595494.80..3038918.49 rows=290034 width=27) (actual time=9241.262..33087.785 rows=311829 loops=1)
Q12,1.0,->  Hash  (cost=406494.91..406494.91 rows=15119991 width=20) (actual time=9171.586..9171.586 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.307..34.554 rows=4009 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.288..25.325 rows=4009 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286562.41 rows=319910 width=8) (actual time=26.195..3613.075 rows=320720 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286562.41 rows=319910 width=12) (actual time=35.592..4003.386 rows=320720 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=35.535..35.535 rows=4009 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=26.137..26.137 rows=4009 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.263..24.672 rows=4009 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.292..33.898 rows=4009 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1831520.45 rows=59892018 width=20) (actual time=0.019..18795.346 rows=59365006 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1820670.76 rows=14889297 width=12) (actual time=0.054..16053.170 rows=14823192 loops=1)
Q10,1.0,->  Hash  (cost=268482.57..268482.57 rows=570874 width=8) (actual time=7405.998..7405.998 rows=568338 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5891.46..268482.57 rows=570874 width=8) (actual time=27.609..7177.158 rows=568338 loops=1)
