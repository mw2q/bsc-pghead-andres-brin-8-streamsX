Q21,707440.0,->  Nested Loop Semi Join  (cost=2406.31..2868053.98 rows=1 width=34) (actual time=35.598..37436.722 rows=707440 loops=1)
Q18,403491.9,->  GroupAggregate  (cost=10235701.75..11067903.95 rows=30261898 width=39) (actual time=68666.565..68666.812 rows=75 loops=1)
Q3,319023.7,->  Sort  (cost=2551344.50..2559320.10 rows=3190237 width=20) (actual time=32425.674..32425.675 rows=10 loops=1)
Q18,100899.8,->  Hash Join  (cost=2195776.05..2814061.74 rows=7567488 width=39) (actual time=43961.673..50184.819 rows=75 loops=1)
Q18,100899.8,->  Hash Join  (cost=2126748.05..2631521.42 rows=7567488 width=20) (actual time=42990.313..49213.246 rows=75 loops=1)
Q18,100899.8,->  Hash  (cost=2814061.74..2814061.74 rows=7567488 width=39) (actual time=50184.974..50184.974 rows=75 loops=1)
Q18,57641.7,->  Sort  (cost=10235701.75..10311356.50 rows=30261898 width=39) (actual time=68666.554..68666.589 rows=525 loops=1)
Q18,57641.7,->  Hash Join  (cost=2908655.34..5648032.75 rows=30261898 width=39) (actual time=50335.236..68665.728 rows=525 loops=1)
Q18,54825.9,->  Hash  (cost=2075348.72..2075348.72 rows=4111946 width=4) (actual time=42873.290..42873.290 rows=75 loops=1)
Q18,54825.9,->  HashAggregate  (cost=1982829.94..2034229.26 rows=4111946 width=8) (actual time=37422.336..42873.127 rows=75 loops=1)
Q21,39439.0,->  Nested Loop Anti Join  (cost=2406.88..2868055.76 rows=1 width=26) (actual time=36.323..40285.859 rows=39439 loops=1)
Q10,28540.8,->  Sort  (cost=2291366.59..2292793.63 rows=570816 width=175) (actual time=30980.836..30980.843 rows=20 loops=1)
Q9,23292.6,->  Sort  (cost=1230555.19..1230555.54 rows=140 width=46) (actual time=90552.077..91132.131 rows=3260964 loops=1)
Q9,23292.6,->  Nested Loop  (cost=66974.69..1230546.02 rows=140 width=24) (actual time=962.161..81553.703 rows=3260964 loops=1)
Q9,23292.6,->  Nested Loop  (cost=66974.26..1230478.17 rows=140 width=24) (actual time=962.141..49439.667 rows=3260964 loops=1)
Q9,23292.6,->  Nested Loop  (cost=66973.96..1230432.99 rows=140 width=28) (actual time=962.132..39240.518 rows=3260964 loops=1)
Q9,23292.6,->  Hash Join  (cost=66976.25..1230550.20 rows=140 width=46) (actual time=962.214..84753.491 rows=3260964 loops=1)
Q2,4728.0,->  Merge Join  (cost=465633.87..889549.39 rows=1 width=190) (actual time=6317.934..8197.300 rows=4728 loops=1)
Q21,4009.0,->  HashAggregate  (cost=2868055.76..2868055.77 rows=1 width=26) (actual time=40334.300..40335.348 rows=4009 loops=1)
Q15,3700.0,->  Subquery Scan on revenue8  (cost=1758806.03..1758889.28 rows=3700 width=12) (actual time=50533.249..50559.813 rows=1 loops=1)
Q15,3700.0,->  Sort  (cost=1759108.56..1759117.81 rows=3700 width=12) (actual time=50559.833..50559.834 rows=1 loops=1)
Q15,3700.0,Merge Join  (cost=3501274.76..3506371.46 rows=3700 width=79) (actual time=50598.825..50598.827 rows=1 loops=1)
Q15,3700.0,->  HashAggregate  (cost=1758806.03..1758852.28 rows=3700 width=12) (actual time=50533.248..50559.811 rows=1 loops=1)
Q7,765.0,Sort  (cost=2131461.80..2131469.45 rows=3060 width=64) (actual time=21893.465..21893.465 rows=4 loops=1)
Q7,765.0,->  HashAggregate  (cost=2131238.73..2131284.63 rows=3060 width=64) (actual time=21893.402..21893.409 rows=4 loops=1)
Q8,366.5,Sort  (cost=1741565.54..1741567.38 rows=733 width=38) (actual time=11415.988..11415.988 rows=2 loops=1)
Q8,366.5,->  HashAggregate  (cost=1741517.83..1741530.66 rows=733 width=38) (actual time=11415.952..11415.952 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2868055.78..2868055.79 rows=1 width=26) (actual time=40336.486..40336.493 rows=100 loops=1)
Q21,100.0,Limit  (cost=2868055.78..2868055.79 rows=1 width=26) (actual time=40336.487..40336.504 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=889549.40..889549.40 rows=1 width=190) (actual time=8202.066..8202.077 rows=100 loops=1)
Q2,100.0,Limit  (cost=889549.40..889549.40 rows=1 width=190) (actual time=8202.068..8202.091 rows=100 loops=1)
Q11,33.5,Sort  (cost=614372.93..615172.70 rows=319910 width=12) (actual time=6886.594..6887.647 rows=9522 loops=1)
Q11,33.5,->  HashAggregate  (cost=292160.84..296159.71 rows=319910 width=12) (actual time=6808.431..6881.395 rows=9522 loops=1)
Q3,27.9,->  HashAggregate  (cost=2450502.26..2482404.63 rows=3190237 width=20) (actual time=32359.299..32404.239 rows=113942 loops=1)
Q15,27.0,->  HashAggregate  (cost=1742082.65..1742119.65 rows=3700 width=12) (actual time=21768.958..21798.984 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.006..0.006 rows=1 loops=734389)
Q14,13.4,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..8146.57 rows=799857 width=0) (actual time=120.270..120.270 rows=10739200 loops=1)
Q3,10.6,->  Hash Join  (cost=767999.15..2402648.70 rows=3190237 width=20) (actual time=7962.743..32110.013 rows=300656 loops=1)
Q16,10.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2424.86 rows=321713 width=0) (actual time=34.882..34.882 rows=3246080 loops=1)
Q9,7.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.015..0.076 rows=7 loops=435072)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.600..3.600 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.604..3.604 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.241..0.241 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.246..0.246 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.263..0.263 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.275..0.275 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.243..0.243 rows=23040 loops=1)
Q5,5.0,Sort  (cost=1914137.27..1914137.33 rows=25 width=34) (actual time=17801.655..17801.656 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1914136.44..1914136.69 rows=25 width=34) (actual time=17801.606..17801.607 rows=5 loops=1)
Q4,5.0,Sort  (cost=1500011.30..1500011.31 rows=1 width=16) (actual time=13689.529..13689.529 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.06 rows=5 width=4) (actual time=0.012..0.012 rows=1 loops=572598)
Q4,5.0,->  HashAggregate  (cost=1500011.28..1500011.29 rows=1 width=16) (actual time=13689.478..13689.480 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=707440)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5807.97 rows=576797 width=0) (actual time=27.574..27.574 rows=2556160 loops=1)
Q4,4.3,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5858.13 rows=581813 width=0) (actual time=27.893..27.893 rows=2556160 loops=1)
Q13,4.3,Sort  (cost=848846.33..848846.83 rows=200 width=8) (actual time=26268.442..26268.445 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=848836.69..848838.69 rows=200 width=8) (actual time=26268.361..26268.370 rows=46 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.009..0.010 rows=1 loops=1203452)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.02 rows=15 width=16) (actual time=0.013..0.014 rows=4 loops=456802)
Q17,3.6,->  Nested Loop  (cost=82.94..115369.54 rows=20336 width=4) (actual time=1.726..196.402 rows=5502 loops=1)
Q4,3.3,->  Nested Loop Semi Join  (cost=6004.15..1499220.93 rows=158070 width=16) (actual time=28.098..13386.304 rows=525047 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.59 rows=10 width=12) (actual time=0.016..0.040 rows=3 loops=2050)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..243736.09 rows=32478411 width=0) (actual time=119.017..119.017 rows=10750720 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.29 rows=1 width=8) (actual time=0.274..0.342 rows=3 loops=21730)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..55441.43 rows=7386858 width=0) (actual time=27.413..27.413 rows=2556160 loops=1)
Q15,2.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..216913.12 rows=28902016 width=0) (actual time=120.393..120.393 rows=10688000 loops=1)
Q15,2.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..216913.12 rows=28902016 width=0) (actual time=118.667..118.667 rows=10696960 loops=1)
Q5,2.3,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..44325.49 rows=5904732 width=0) (actual time=27.431..27.431 rows=2545920 loops=1)
Q22,2.3,Sort  (cost=695769.06..695769.07 rows=3 width=20) (actual time=8782.421..8782.421 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=642931.09..642931.13 rows=3 width=20) (actual time=8782.381..8782.383 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.033..0.048 rows=2 loops=6395)
Q20,2.0,->  Nested Loop  (cost=754.62..11676076.38 rows=29405 width=4) (actual time=13.220..7749.554 rows=59062 loops=1)
Q20,2.0,->  Hash  (cost=11676076.38..11676076.38 rows=29405 width=4) (actual time=7783.364..7783.364 rows=59062 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2016.33 rows=200433 width=0) (actual time=4.195..4.195 rows=405760 loops=1)
Q12,2.0,Sort  (cost=3044031.20..3044031.21 rows=1 width=27) (actual time=32443.981..32443.981 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3044031.18..3044031.19 rows=1 width=27) (actual time=32443.929..32443.929 rows=2 loops=1)
Q16,1.9,->  Sort  (cost=403983.73..405475.59 rows=596746 width=40) (actual time=10042.821..10188.124 rows=1187342 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.565..3809.768 rows=7995520 loops=1)
Q16,1.9,->  Hash Join  (cost=54810.17..346735.63 rows=596746 width=40) (actual time=1223.994..6555.892 rows=1187342 loops=1)
Q10,1.9,->  Hash Join  (cost=346391.65..2256198.82 rows=570816 width=175) (actual time=7039.095..28678.865 rows=1135442 loops=1)
Q10,1.9,->  Hash Join  (cost=346390.09..2248348.53 rows=570816 width=153) (actual time=7039.065..28266.461 rows=1135442 loops=1)
Q10,1.9,->  Hash Join  (cost=277362.09..2170758.29 rows=570816 width=12) (actual time=5762.810..26204.429 rows=1135442 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1831520.45 rows=20174599 width=8) (actual time=0.013..18942.092 rows=37927367 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2342502.41 rows=393294 width=38) (actual time=35.560..32821.431 rows=734389 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1917650.35 rows=806984 width=34) (actual time=35.503..25113.466 rows=1522128 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.034..0.520 rows=56 loops=1)
Q1,1.5,Sort  (cost=4201806.80..4201806.82 rows=6 width=20) (actual time=89751.116..89751.116 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4201806.62..4201806.72 rows=6 width=20) (actual time=89751.064..89751.066 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=2270469.22..2276177.38 rows=570816 width=175) (actual time=30624.295..30839.543 rows=378537 loops=1)
Q20,1.4,Sort  (cost=11678887.22..11678890.16 rows=1176 width=51) (actual time=7816.047..7816.142 rows=1741 loops=1)
Q20,1.4,->  Hash Semi Join  (cost=11676486.94..11678827.25 rows=1176 width=51) (actual time=7783.818..7814.521 rows=1741 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5990.73 rows=597873 width=0) (actual time=4.177..4.177 rows=405760 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2869.33 rows=139435 width=0) (actual time=426.940..426.940 rows=190659 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2904.19..41842.36 rows=139435 width=24) (actual time=435.170..528.741 rows=190659 loops=1)
Q18,1.3,Limit  (cost=10235701.75..10235704.50 rows=100 width=39) (actual time=68666.568..68666.825 rows=75 loops=1)
Q9,1.2,GroupAggregate  (cost=1230555.19..1230560.09 rows=140 width=46) (actual time=90561.916..93318.450 rows=175 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91797.85 rows=9164985 width=0) (actual time=119.385..119.385 rows=10750720 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=116112 width=4) (actual time=0.010..921.929 rows=108768 loops=1)
Q9,1.0,->  Hash Join  (cost=66973.40..352575.88 rows=464448 width=16) (actual time=962.054..5183.838 rows=435072 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=116112 width=4) (actual time=961.548..961.548 rows=108768 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.722..1843.819 rows=299493 loops=1)
Q8,1.0,->  Nested Loop  (cost=421.83..1693551.06 rows=123473 width=20) (actual time=7.377..9183.867 rows=123130 loops=1)
Q8,1.0,->  Nested Loop  (cost=421.39..1494892.29 rows=405720 width=16) (actual time=7.063..4778.418 rows=403804 loops=1)
Q8,1.0,->  Nested Loop  (cost=38752.27..1740559.34 rows=24695 width=16) (actual time=1941.260..11333.805 rows=24359 loops=1)
Q8,1.0,->  Hash Join  (cost=38753.83..1741023.93 rows=24695 width=38) (actual time=1941.305..11373.196 rows=24359 loops=1)
Q8,1.0,->  Hash Join  (cost=38751.97..1732591.18 rows=24695 width=16) (actual time=1941.218..11189.592 rows=24359 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=1931.170..1931.170 rows=299493 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..413.38 rows=13460 width=0) (actual time=4.710..4.710 rows=13440 loops=1)
Q8,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.64 rows=31 width=0) (actual time=0.022..0.022 rows=30 loops=13440)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=416.74..28274.78 rows=13460 width=4) (actual time=6.972..174.094 rows=13440 loops=1)
Q8,1.0,->  Bitmap Heap Scan on lineitem  (cost=4.65..108.65 rows=31 width=20) (actual time=0.039..0.328 rows=30 loops=13440)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.635..359.507 rows=59899 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=8) (actual time=0.006..2643.225 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2118436.65 rows=1466551 width=42) (actual time=629.546..21142.870 rows=1466349 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2130323.25 rows=61032 width=64) (actual time=678.532..21797.003 rows=58936 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..534366.29 rows=1210798 width=30) (actual time=629.411..8246.526 rows=1203452 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.105..590.360 rows=119852 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.038..46.490 rows=8019 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=628.876..628.876 rows=119852 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=48.836..48.836 rows=8019 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91997.29..1373182.45 rows=797750 width=8) (actual time=120.161..24935.828 rows=795800 loops=1)
Q5,1.0,->  Nested Loop  (cost=83240.77..1894240.03 rows=1833423 width=46) (actual time=2126.784..16952.514 rows=1826665 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.698..1990.073 rows=300270 loops=1)
Q5,1.0,->  Hash Join  (cost=87919.77..1913403.07 rows=73337 width=34) (actual time=2190.320..17707.621 rows=72846 loops=1)
Q5,1.0,->  Hash Join  (cost=83240.20..439526.05 rows=458465 width=38) (actual time=2126.740..9746.127 rows=456802 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2097.144..2097.144 rows=300270 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=44898.57..388003.55 rows=2292325 width=8) (actual time=27.587..6690.894 rows=2283946 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.636..388.139 rows=60054 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=6003.58..270278.78 rows=581813 width=20) (actual time=28.065..5834.757 rows=572598 loops=1)
Q3,1.0,->  Hash Join  (cost=107109.31..497560.29 rows=1486654 width=12) (actual time=430.533..7312.837 rows=1462965 loops=1)
Q3,1.0,->  Hash  (cost=497560.29..497560.29 rows=1486654 width=12) (actual time=7834.036..7834.036 rows=1462965 loops=1)
Q3,1.0,->  Hash  (cost=46047.60..46047.60 rows=301885 width=4) (actual time=400.646..400.646 rows=300036 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6920.56 rows=301885 width=0) (actual time=63.624..63.624 rows=300036 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=57288.15..405171.87 rows=7386858 width=16) (actual time=27.577..4408.348 rows=7315085 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=251855.69..1732808.83 rows=32478411 width=12) (actual time=119.772..18817.839 rows=32231183 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6996.04..46047.60 rows=301885 width=4) (actual time=72.183..317.742 rows=300036 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=4) (actual time=0.018..4159.084 rows=15000000 loops=1)
Q22,1.0,->  Hash  (cost=406897.75..406897.75 rows=15134975 width=4) (actual time=8089.746..8089.746 rows=15000000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=598989.13..642489.55 rows=58872 width=20) (actual time=8570.244..8761.366 rows=63569 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6537.60 rows=380079 width=0) (actual time=78.943..78.943 rows=381259 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6632.62..51887.69 rows=380079 width=4) (actual time=86.871..304.525 rows=381259 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.297..34.391 rows=4010 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=35.458..35.458 rows=4010 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.282..33.697 rows=4010 loops=1)
Q2,1.0,->  Sort  (cost=465633.45..469632.33 rows=1599552 width=168) (actual time=6317.567..6447.594 rows=1602875 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.306..134.262 rows=20037 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8022 width=30) (actual time=0.153..1101.443 rows=7972 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300805.72 rows=1599552 width=168) (actual time=145.145..5170.914 rows=1602960 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=144.986..144.986 rows=20037 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.256..25.964 rows=4007 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.301..29.474 rows=4021 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.68 rows=20013 width=0) (actual time=8.912..8.912 rows=21730 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.280..28.864 rows=4021 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.19..34901.16 rows=22035 width=4) (actual time=12.557..274.499 rows=21730 loops=1)
Q19,1.0,->  Nested Loop  (cost=12892.00..612640.03 rows=1139 width=8) (actual time=33.430..4343.122 rows=1104 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4003.20 rows=399120 width=0) (actual time=4.175..4.175 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.63 rows=7992 width=0) (actual time=3.196..3.196 rows=7906 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.51 rows=7978 width=0) (actual time=3.294..3.294 rows=8005 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.43 rows=7973 width=0) (actual time=3.391..3.391 rows=7853 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.74 rows=31 width=0) (actual time=0.031..0.031 rows=30 loops=4780)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12887.26..26626.62 rows=4776 width=30) (actual time=30.980..344.269 rows=4780 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=16) (actual time=0.005..2722.032 rows=15000000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1680210.96 rows=60523796 width=8) (actual time=0.005..8201.884 rows=59983922 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1680210.96 rows=60523796 width=8) (actual time=0.042..7551.021 rows=59983922 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.024..0.040 rows=30 loops=2050)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.024..0.040 rows=30 loops=2050)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.67 rows=2024 width=0) (actual time=0.941..0.941 rows=2050 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=73.17..6695.48 rows=2024 width=4) (actual time=1.278..15.076 rows=2050 loops=1)
Q16,1.0,Sort  (cost=413788.83..413858.77 rows=27973 width=40) (actual time=10849.138..10851.792 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=51064.28..51064.28 rows=298373 width=40) (actual time=1221.001..1221.001 rows=297009 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403983.73..411722.78 rows=27973 width=40) (actual time=10042.876..10787.488 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2499.45..51064.28 rows=298373 width=40) (actual time=34.944..1096.974 rows=297009 loops=1)
Q15,1.0,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.020..29.501 rows=96965 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=217470.57..1719784.81 rows=2229784 width=12) (actual time=119.423..19896.892 rows=2245732 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=217470.57..1719784.81 rows=2229784 width=12) (actual time=121.142..26402.905 rows=2245732 loops=1)
Q14,1.0,->  Hash Join  (cost=93868.53..1161075.94 rows=799857 width=29) (actual time=1633.229..25283.198 rows=773518 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8346.53..1063556.08 rows=799857 width=12) (actual time=121.119..22922.452 rows=773518 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..444735.19 rows=14878675 width=8) (actual time=0.018..7447.844 rows=14837857 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..736943.31 rows=14878675 width=8) (actual time=1065.568..17212.176 rows=15337878 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..406494.91 rows=15119991 width=20) (actual time=0.011..4464.298 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2434360.13 rows=290795 width=15) (actual time=0.186..22927.477 rows=312867 loops=1)
Q12,1.0,->  Hash Join  (cost=595494.80..3038942.27 rows=290795 width=27) (actual time=8900.289..32152.928 rows=312867 loops=1)
Q12,1.0,->  Hash  (cost=406494.91..406494.91 rows=15119991 width=20) (actual time=8854.948..8854.948 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.319..51.923 rows=3990 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.289..24.661 rows=3990 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286562.41 rows=319910 width=8) (actual time=25.596..2411.224 rows=319200 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286562.41 rows=319910 width=12) (actual time=53.307..4081.981 rows=319200 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=53.248..53.248 rows=3990 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=25.533..25.533 rows=3990 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.259..24.000 rows=3990 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.300..50.935 rows=3990 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1817038.30 rows=59619208 width=20) (actual time=0.020..18381.103 rows=59556448 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1831520.45 rows=14978025 width=12) (actual time=0.014..17248.205 rows=14807964 loops=1)
Q10,1.0,->  Hash  (cost=270152.13..270152.13 rows=576797 width=8) (actual time=5759.432..5759.432 rows=567736 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5952.17..270152.13 rows=576797 width=8) (actual time=27.745..5537.066 rows=567736 loops=1)
